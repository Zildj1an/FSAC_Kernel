kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:2221:13: error: invalid storage class for function ‘__sched_fork’
 static void __sched_fork(unsigned long clone_flags, struct task_struct *p)
             ^~~~~~~~~~~~
kernel/sched/core.c:2319:13: error: invalid storage class for function ‘set_schedstats’
 static void set_schedstats(bool enabled)
             ^~~~~~~~~~~~~~
kernel/sched/core.c:2335:19: error: invalid storage class for function ‘setup_schedstats’
 static int __init setup_schedstats(char *str)
                   ^~~~~~~~~~~~~~~~
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2359:24: error: initializer element is not constant
 __setup("schedstats=", setup_schedstats);
                        ^~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:2359:1: note: in expansion of macro ‘__setup’
 __setup("schedstats=", setup_schedstats);
 ^~~~~~~
kernel/sched/core.c:2359:24: note: (near initialization for ‘__setup_setup_schedstats.setup_func’)
 __setup("schedstats=", setup_schedstats);
                        ^~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:2359:1: note: in expansion of macro ‘__setup’
 __setup("schedstats=", setup_schedstats);
 ^~~~~~~
kernel/sched/core.c:2361:20: error: invalid storage class for function ‘init_schedstats’
 static void __init init_schedstats(void)
                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:2508:19: error: invalid storage class for function ‘dl_bw_cpus’
 static inline int dl_bw_cpus(int i)
                   ^~~~~~~~~~
kernel/sched/core.c:2543:12: error: invalid storage class for function ‘dl_overflow’
 static int dl_overflow(struct task_struct *p, int policy,
            ^~~~~~~~~~~
kernel/sched/core.c: In function ‘wake_up_new_task’:
kernel/sched/core.c:2597:7: error: dereferencing pointer to incomplete type ‘struct sched_plugin’
   fsac->task_new(p,1,0);
       ^~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:2641:19: error: non-static declaration of ‘preempt_notifier_inc’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_inc);
                   ^~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2641:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_inc);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2637:6: note: previous definition of ‘preempt_notifier_inc’ was here
 void preempt_notifier_inc(void)
      ^~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2647:19: error: non-static declaration of ‘preempt_notifier_dec’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_dec);
                   ^~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2647:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_dec);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2643:6: note: previous definition of ‘preempt_notifier_dec’ was here
 void preempt_notifier_dec(void)
      ^~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2660:19: error: non-static declaration of ‘preempt_notifier_register’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_register);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2660:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_register);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2653:6: note: previous definition of ‘preempt_notifier_register’ was here
 void preempt_notifier_register(struct preempt_notifier *notifier)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2672:19: error: non-static declaration of ‘preempt_notifier_unregister’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_unregister);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2672:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_unregister);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2668:6: note: previous definition of ‘preempt_notifier_unregister’ was here
 void preempt_notifier_unregister(struct preempt_notifier *notifier)
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2674:13: error: invalid storage class for function ‘__fire_sched_in_preempt_notifiers’
 static void __fire_sched_in_preempt_notifiers(struct task_struct *curr)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2682:29: error: invalid storage class for function ‘fire_sched_in_preempt_notifiers’
 static __always_inline void fire_sched_in_preempt_notifiers(struct task_struct *curr)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2689:1: error: invalid storage class for function ‘__fire_sched_out_preempt_notifiers’
 __fire_sched_out_preempt_notifiers(struct task_struct *curr,
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2699:1: error: invalid storage class for function ‘fire_sched_out_preempt_notifiers’
 fire_sched_out_preempt_notifiers(struct task_struct *curr,
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2734:1: error: invalid storage class for function ‘prepare_task_switch’
 prepare_task_switch(struct rq *rq, struct task_struct *prev,
 ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2763:19: error: invalid storage class for function ‘finish_task_switch’
 static struct rq *finish_task_switch(struct task_struct *prev)
                   ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2832:13: error: invalid storage class for function ‘__balance_callback’
 static void __balance_callback(struct rq *rq)
             ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2852:20: error: invalid storage class for function ‘balance_callback’
 static inline void balance_callback(struct rq *rq)
                    ^~~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:2902:1: error: invalid storage class for function ‘context_switch’
 context_switch(struct rq *rq, struct task_struct *prev,
 ^~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2978:15: error: non-static declaration of ‘single_task_running’ follows static declaration
 EXPORT_SYMBOL(single_task_running);
               ^~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2978:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(single_task_running);
 ^~~~~~~~~~~~~
kernel/sched/core.c:2974:6: note: previous definition of ‘single_task_running’ was here
 bool single_task_running(void)
      ^~~~~~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3044:36: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct kernel_stat, kstat);
                                    ^~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3044:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_stat, kstat);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:3045:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
                                       ^~~~~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3045:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
 ^~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3047:23: error: extern declaration of ‘kstat’ follows declaration with no linkage
 EXPORT_PER_CPU_SYMBOL(kstat);
                       ^~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
./include/linux/percpu-defs.h:181:36: note: in expansion of macro ‘EXPORT_SYMBOL’
 #define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(var)
                                    ^~~~~~~~~~~~~
kernel/sched/core.c:3047:1: note: in expansion of macro ‘EXPORT_PER_CPU_SYMBOL’
 EXPORT_PER_CPU_SYMBOL(kstat);
 ^~~~~~~~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3044:36: note: previous declaration of ‘kstat’ was here
 DEFINE_PER_CPU(struct kernel_stat, kstat);
                                    ^~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3044:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_stat, kstat);
 ^~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3048:23: error: extern declaration of ‘kernel_cpustat’ follows declaration with no linkage
 EXPORT_PER_CPU_SYMBOL(kernel_cpustat);
                       ^~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
./include/linux/percpu-defs.h:181:36: note: in expansion of macro ‘EXPORT_SYMBOL’
 #define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(var)
                                    ^~~~~~~~~~~~~
kernel/sched/core.c:3048:1: note: in expansion of macro ‘EXPORT_PER_CPU_SYMBOL’
 EXPORT_PER_CPU_SYMBOL(kernel_cpustat);
 ^~~~~~~~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3045:39: note: previous declaration of ‘kernel_cpustat’ was here
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
                                       ^~~~~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3045:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:3056:20: error: invalid storage class for function ‘prefetch_curr_exec_start’
 static inline void prefetch_curr_exec_start(struct task_struct *p)
                    ^~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3240:20: error: invalid storage class for function ‘preempt_latency_start’
 static inline void preempt_latency_start(int val) { }
                    ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3241:20: error: invalid storage class for function ‘preempt_latency_stop’
 static inline void preempt_latency_stop(int val) { }
                    ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3247:22: error: invalid storage class for function ‘__schedule_bug’
 static noinline void __schedule_bug(struct task_struct *prev)
                      ^~~~~~~~~~~~~~
kernel/sched/core.c:3278:20: error: invalid storage class for function ‘schedule_debug’
 static inline void schedule_debug(struct task_struct *prev)
                    ^~~~~~~~~~~~~~
kernel/sched/core.c:3300:1: error: invalid storage class for function ‘pick_next_task’
 pick_next_task(struct rq *rq, struct task_struct *prev, struct pin_cookie cookie)
 ^~~~~~~~~~~~~~
kernel/sched/core.c:3375:29: error: invalid storage class for function ‘__schedule’
 static void __sched notrace __schedule(bool preempt)
                             ^~~~~~~~~~
kernel/sched/core.c:3491:20: error: invalid storage class for function ‘sched_submit_work’
 static inline void sched_submit_work(struct task_struct *tsk)
                    ^~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3514:15: error: non-static declaration of ‘schedule’ follows static declaration
 EXPORT_SYMBOL(schedule);
               ^~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:3514:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(schedule);
 ^~~~~~~~~~~~~
kernel/sched/core.c:3503:35: note: previous definition of ‘schedule’ was here
 asmlinkage __visible void __sched schedule(void)
                                   ^~~~~~~~
kernel/sched/core.c:3547:29: error: invalid storage class for function ‘preempt_schedule_common’
 static void __sched notrace preempt_schedule_common(void)
                             ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3681:15: error: non-static declaration of ‘default_wake_function’ follows static declaration
 EXPORT_SYMBOL(default_wake_function);
               ^~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:3681:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(default_wake_function);
 ^~~~~~~~~~~~~
kernel/sched/core.c:3676:5: note: previous definition of ‘default_wake_function’ was here
 int default_wake_function(wait_queue_t *curr, unsigned mode, int wake_flags,
     ^~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3839:15: error: non-static declaration of ‘set_user_nice’ follows static declaration
 EXPORT_SYMBOL(set_user_nice);
               ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:3839:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(set_user_nice);
 ^~~~~~~~~~~~~
kernel/sched/core.c:3788:6: note: previous definition of ‘set_user_nice’ was here
 void set_user_nice(struct task_struct *p, long nice)
      ^~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__nice’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__nice’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__nice’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__nice’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_nice’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_nice’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_nice’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_nice’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_nice’; did you mean ‘SyS_nice’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_nice’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:3944:28: error: invalid storage class for function ‘find_process_by_pid’
 static struct task_struct *find_process_by_pid(pid_t pid)
                            ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3958:1: error: invalid storage class for function ‘__setparam_dl’
 __setparam_dl(struct task_struct *p, const struct sched_attr *attr)
 ^~~~~~~~~~~~~
kernel/sched/core.c:3995:13: error: invalid storage class for function ‘__setscheduler_params’
 static void __setscheduler_params(struct task_struct *p,
             ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:4021:13: error: invalid storage class for function ‘__setscheduler’
 static void __setscheduler(struct rq *rq, struct task_struct *p,
             ^~~~~~~~~~~~~~
kernel/sched/core.c:4046:1: error: invalid storage class for function ‘__getparam_dl’
 __getparam_dl(struct task_struct *p, struct sched_attr *attr)
 ^~~~~~~~~~~~~
kernel/sched/core.c:4068:1: error: invalid storage class for function ‘__checkparam_dl’
 __checkparam_dl(const struct sched_attr *attr)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:4101:13: error: invalid storage class for function ‘check_same_owner’
 static bool check_same_owner(struct task_struct *p)
             ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4114:13: error: invalid storage class for function ‘dl_param_changed’
 static bool dl_param_changed(struct task_struct *p,
             ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4128:12: error: invalid storage class for function ‘__sched_setscheduler’
 static int __sched_setscheduler(struct task_struct *p,
            ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__sched_setscheduler’:
kernel/sched/core.c:4388:3: error: too few arguments to function ‘fsac_dealloc’
   fsac_dealloc();
   ^~~~~~~~~~~~
In file included from kernel/sched/core.c:91:
./include/fsac/fsac.h:54:6: note: declared here
 void fsac_dealloc(struct task_struct *tsk);
      ^~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:4394:12: error: invalid storage class for function ‘_sched_setscheduler’
 static int _sched_setscheduler(struct task_struct *p, int policy,
            ^~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:4427:19: error: non-static declaration of ‘sched_setscheduler’ follows static declaration
 EXPORT_SYMBOL_GPL(sched_setscheduler);
                   ^~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4427:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(sched_setscheduler);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:4422:5: note: previous definition of ‘sched_setscheduler’ was here
 int sched_setscheduler(struct task_struct *p, int policy,
     ^~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:4433:19: error: non-static declaration of ‘sched_setattr’ follows static declaration
 EXPORT_SYMBOL_GPL(sched_setattr);
                   ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4433:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(sched_setattr);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:4429:5: note: previous definition of ‘sched_setattr’ was here
 int sched_setattr(struct task_struct *p, const struct sched_attr *attr)
     ^~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:4453:19: error: non-static declaration of ‘sched_setscheduler_nocheck’ follows static declaration
 EXPORT_SYMBOL_GPL(sched_setscheduler_nocheck);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4453:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(sched_setscheduler_nocheck);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:4448:5: note: previous definition of ‘sched_setscheduler_nocheck’ was here
 int sched_setscheduler_nocheck(struct task_struct *p, int policy,
     ^~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:4456:1: error: invalid storage class for function ‘do_sched_setscheduler’
 do_sched_setscheduler(pid_t pid, int policy, struct sched_param __user *param)
 ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:4480:12: error: invalid storage class for function ‘sched_copy_attr’
 static int sched_copy_attr(struct sched_attr __user *uattr,
            ^~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setscheduler’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setscheduler’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setscheduler’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setscheduler’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setscheduler’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setscheduler’; did you mean ‘SyS_sched_setscheduler’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setparam’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setparam’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setparam’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setparam’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setparam’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setparam’; did you mean ‘SyS_sched_setparam’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setattr’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setattr’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setattr’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setattr’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setattr’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setattr’; did you mean ‘SyS_sched_setattr’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
  CC      kernel/trace/trace_seq.o
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getscheduler’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getscheduler’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getscheduler’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getscheduler’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_getscheduler’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getscheduler’; did you mean ‘SYSC_sched_setscheduler’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getparam’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getparam’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getparam’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getparam’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_getparam’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getparam’; did you mean ‘SYSC_sched_setparam’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:4682:12: error: invalid storage class for function ‘sched_read_attr’
 static int sched_read_attr(struct sched_attr __user *uattr,
            ^~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getattr’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getattr’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getattr’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getattr’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_getattr’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getattr’; did you mean ‘SYSC_sched_setattr’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:91:
kernel/sched/core.c: In function ‘sched_setaffinity’:
kernel/sched/core.c:4777:20: error: ‘pc’ undeclared (first use in this function); did you mean ‘p’?
  if (!p || is_fsac(pc)) {
                    ^~
./include/fsac/fsac.h:34:25: note: in definition of macro ‘is_fsac’
 #define is_fsac(t)    ((t)->policy == SCHED_FSAC)
                         ^
kernel/sched/core.c:4777:20: note: each undeclared identifier is reported only once for each function it appears in
  if (!p || is_fsac(pc)) {
                    ^~
./include/fsac/fsac.h:34:25: note: in definition of macro ‘is_fsac’
 #define is_fsac(t)    ((t)->policy == SCHED_FSAC)
                         ^
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:4857:12: error: invalid storage class for function ‘get_user_cpu_mask’
 static int get_user_cpu_mask(unsigned long __user *user_mask_ptr, unsigned len,
            ^~~~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setaffinity’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setaffinity’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setaffinity’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setaffinity’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setaffinity’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setaffinity’; did you mean ‘SyS_sched_setaffinity’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getaffinity’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getaffinity’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getaffinity’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getaffinity’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_getaffinity’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getaffinity’; did you mean ‘SYSC_sched_setaffinity’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_yield’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4964:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_yield’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4964:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4964:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_yield’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4964:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_yield’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4964:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4964:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:180:13: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  asmlinkage long sys_##sname(void)
             ^~~~
kernel/sched/core.c:4964:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:4994:15: error: non-static declaration of ‘_cond_resched’ follows static declaration
 EXPORT_SYMBOL(_cond_resched);
               ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4994:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(_cond_resched);
 ^~~~~~~~~~~~~
kernel/sched/core.c:4986:13: note: previous definition of ‘_cond_resched’ was here
 int __sched _cond_resched(void)
             ^~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5023:15: error: non-static declaration of ‘__cond_resched_lock’ follows static declaration
 EXPORT_SYMBOL(__cond_resched_lock);
               ^~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5023:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(__cond_resched_lock);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5005:5: note: previous definition of ‘__cond_resched_lock’ was here
 int __cond_resched_lock(spinlock_t *lock)
     ^~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5037:15: error: non-static declaration of ‘__cond_resched_softirq’ follows static declaration
 EXPORT_SYMBOL(__cond_resched_softirq);
               ^~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5037:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(__cond_resched_softirq);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5025:13: note: previous definition of ‘__cond_resched_softirq’ was here
 int __sched __cond_resched_softirq(void)
             ^~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5066:15: error: non-static declaration of ‘yield’ follows static declaration
 EXPORT_SYMBOL(yield);
               ^~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5066:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(yield);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5061:14: note: previous definition of ‘yield’ was here
 void __sched yield(void)
              ^~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5140:19: error: non-static declaration of ‘yield_to’ follows static declaration
 EXPORT_SYMBOL_GPL(yield_to);
                   ^~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5140:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(yield_to);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:5083:13: note: previous definition of ‘yield_to’ was here
 int __sched yield_to(struct task_struct *p, bool preempt)
             ^~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5165:15: error: non-static declaration of ‘io_schedule_timeout’ follows static declaration
 EXPORT_SYMBOL(io_schedule_timeout);
               ^~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5165:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(io_schedule_timeout);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5146:14: note: previous definition of ‘io_schedule_timeout’ was here
 long __sched io_schedule_timeout(long timeout)
              ^~~~~~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_get_priority_max’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_max’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_get_priority_max’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_max’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_get_priority_max’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_get_priority_max’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_get_priority_max’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_get_priority_max’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_get_priority_max’; did you mean ‘SyS_sched_get_priority_max’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_get_priority_max’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_get_priority_min’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_min’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_get_priority_min’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_min’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_get_priority_min’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_get_priority_min’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_get_priority_min’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_get_priority_min’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_get_priority_min’; did you mean ‘SyS_sched_get_priority_min’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_get_priority_min’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_rr_get_interval’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_rr_get_interval’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_rr_get_interval’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_rr_get_interval’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_rr_get_interval’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_rr_get_interval’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_rr_get_interval’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_rr_get_interval’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_rr_get_interval’; did you mean ‘SyS_sched_rr_get_interval’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_rr_get_interval’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:5570:13: error: invalid storage class for function ‘calc_load_migrate’
 static void calc_load_migrate(struct rq *rq)
             ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:5577:13: error: invalid storage class for function ‘put_prev_task_fake’
 static void put_prev_task_fake(struct rq *rq, struct task_struct *prev)
             ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5582:19: error: initializer element is not constant
  .put_prev_task = put_prev_task_fake,
                   ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5582:19: note: (near initialization for ‘fake_sched_class.put_prev_task’)
kernel/sched/core.c:5601:13: error: invalid storage class for function ‘migrate_tasks’
 static void migrate_tasks(struct rq *dead_rq)
             ^~~~~~~~~~~~~
kernel/sched/core.c:5682:13: error: invalid storage class for function ‘set_rq_online’
 static void set_rq_online(struct rq *rq)
             ^~~~~~~~~~~~~
kernel/sched/core.c:5697:13: error: invalid storage class for function ‘set_rq_offline’
 static void set_rq_offline(struct rq *rq)
             ^~~~~~~~~~~~~~
kernel/sched/core.c:5712:13: error: invalid storage class for function ‘set_cpu_rq_start_time’
 static void set_cpu_rq_start_time(unsigned int cpu)
             ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5725:19: error: invalid storage class for function ‘sched_debug_setup’
 static int __init sched_debug_setup(char *str)
                   ^~~~~~~~~~~~~~~~~
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5731:28: error: initializer element is not constant
 early_param("sched_debug", sched_debug_setup);
                            ^~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:5731:1: note: in expansion of macro ‘early_param’
 early_param("sched_debug", sched_debug_setup);
 ^~~~~~~~~~~
kernel/sched/core.c:5731:28: note: (near initialization for ‘__setup_sched_debug_setup.setup_func’)
 early_param("sched_debug", sched_debug_setup);
                            ^~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:5731:1: note: in expansion of macro ‘early_param’
 early_param("sched_debug", sched_debug_setup);
 ^~~~~~~~~~~
kernel/sched/core.c:5733:20: error: invalid storage class for function ‘sched_debug’
 static inline bool sched_debug(void)
                    ^~~~~~~~~~~
kernel/sched/core.c:5738:12: error: invalid storage class for function ‘sched_domain_debug_one’
 static int sched_domain_debug_one(struct sched_domain *sd, int cpu, int level,
            ^~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5811:13: error: invalid storage class for function ‘sched_domain_debug’
 static void sched_domain_debug(struct sched_domain *sd, int cpu)
             ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5844:12: error: invalid storage class for function ‘sd_degenerate’
 static int sd_degenerate(struct sched_domain *sd)
            ^~~~~~~~~~~~~
kernel/sched/core.c:5870:1: error: invalid storage class for function ‘sd_parent_degenerate’
 sd_parent_degenerate(struct sched_domain *sd, struct sched_domain *parent)
 ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5900:13: error: invalid storage class for function ‘free_rootdomain’
 static void free_rootdomain(struct rcu_head *rcu)
             ^~~~~~~~~~~~~~~
kernel/sched/core.c:5913:13: error: invalid storage class for function ‘rq_attach_root’
 static void rq_attach_root(struct rq *rq, struct root_domain *rd)
             ^~~~~~~~~~~~~~
kernel/sched/core.c:5950:12: error: invalid storage class for function ‘init_rootdomain’
 static int init_rootdomain(struct root_domain *rd)
            ^~~~~~~~~~~~~~~
kernel/sched/core.c:5989:13: error: invalid storage class for function ‘init_defrootdomain’
 static void init_defrootdomain(void)
             ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5996:28: error: invalid storage class for function ‘alloc_rootdomain’
 static struct root_domain *alloc_rootdomain(void)
                            ^~~~~~~~~~~~~~~~
kernel/sched/core.c:6012:13: error: invalid storage class for function ‘free_sched_groups’
 static void free_sched_groups(struct sched_group *sg, int free_sgc)
             ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:6031:13: error: invalid storage class for function ‘destroy_sched_domain’
 static void destroy_sched_domain(struct sched_domain *sd)
             ^~~~~~~~~~~~~~~~~~~~
  CC      kernel/profile.o
kernel/sched/core.c:6048:13: error: invalid storage class for function ‘destroy_sched_domains_rcu’
 static void destroy_sched_domains_rcu(struct rcu_head *rcu)
             ^~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6059:13: error: invalid storage class for function ‘destroy_sched_domains’
 static void destroy_sched_domains(struct sched_domain *sd)
             ^~~~~~~~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:6074:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain *, sd_llc);
                                       ^~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6074:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain *, sd_llc);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6075:21: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(int, sd_llc_size);
                     ^~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6075:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(int, sd_llc_size);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6076:21: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(int, sd_llc_id);
                     ^~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6076:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(int, sd_llc_id);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6077:46: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain_shared *, sd_llc_shared);
                                              ^~~~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6077:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain_shared *, sd_llc_shared);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6078:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain *, sd_numa);
                                       ^~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6078:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain *, sd_numa);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6079:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain *, sd_asym);
                                       ^~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6079:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain *, sd_asym);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6081:13: error: invalid storage class for function ‘update_top_cache_domain’
 static void update_top_cache_domain(int cpu)
             ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6112:1: error: invalid storage class for function ‘cpu_attach_domain’
 cpu_attach_domain(struct sched_domain *sd, struct root_domain *rd, int cpu)
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:6158:19: error: invalid storage class for function ‘isolated_cpu_setup’
 static int __init isolated_cpu_setup(char *str)
                   ^~~~~~~~~~~~~~~~~~
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:6170:22: error: initializer element is not constant
 __setup("isolcpus=", isolated_cpu_setup);
                      ^~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6170:1: note: in expansion of macro ‘__setup’
 __setup("isolcpus=", isolated_cpu_setup);
 ^~~~~~~
kernel/sched/core.c:6170:22: note: (near initialization for ‘__setup_isolated_cpu_setup.setup_func’)
 __setup("isolcpus=", isolated_cpu_setup);
                      ^~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6170:1: note: in expansion of macro ‘__setup’
 __setup("isolcpus=", isolated_cpu_setup);
 ^~~~~~~
kernel/sched/core.c:6197:13: error: invalid storage class for function ‘build_group_mask’
 static void build_group_mask(struct sched_domain *sd, struct sched_group *sg)
             ^~~~~~~~~~~~~~~~
kernel/sched/core.c:6223:1: error: invalid storage class for function ‘build_overlap_sched_groups’
 build_overlap_sched_groups(struct sched_domain *sd, int cpu)
 ^~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6297:12: error: invalid storage class for function ‘get_group’
 static int get_group(int cpu, struct sd_data *sdd, struct sched_group **sg)
            ^~~~~~~~~
kernel/sched/core.c:6322:1: error: invalid storage class for function ‘build_sched_groups’
 build_sched_groups(struct sched_domain *sd, int cpu)
 ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6380:13: error: invalid storage class for function ‘init_sched_groups_capacity’
 static void init_sched_groups_capacity(int cpu, struct sched_domain *sd)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6405:19: error: invalid storage class for function ‘setup_relax_domain_level’
 static int __init setup_relax_domain_level(char *str)
                   ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:6412:32: error: initializer element is not constant
 __setup("relax_domain_level=", setup_relax_domain_level);
                                ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6412:1: note: in expansion of macro ‘__setup’
 __setup("relax_domain_level=", setup_relax_domain_level);
 ^~~~~~~
kernel/sched/core.c:6412:32: note: (near initialization for ‘__setup_setup_relax_domain_level.setup_func’)
 __setup("relax_domain_level=", setup_relax_domain_level);
                                ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6412:1: note: in expansion of macro ‘__setup’
 __setup("relax_domain_level=", setup_relax_domain_level);
 ^~~~~~~
kernel/sched/core.c:6414:13: error: invalid storage class for function ‘set_domain_attribute’
 static void set_domain_attribute(struct sched_domain *sd,
             ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6435:13: error: invalid storage class for function ‘__sdt_free’
 static void __sdt_free(const struct cpumask *cpu_map);
             ^~~~~~~~~~
kernel/sched/core.c:6436:12: error: invalid storage class for function ‘__sdt_alloc’
 static int __sdt_alloc(const struct cpumask *cpu_map);
            ^~~~~~~~~~~
kernel/sched/core.c:6438:13: error: invalid storage class for function ‘__free_domain_allocs’
 static void __free_domain_allocs(struct s_data *d, enum s_alloc what,
             ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__free_domain_allocs’:
kernel/sched/core.c:6448:3: error: implicit declaration of function ‘__sdt_free’; did you mean ‘bioset_free’? [-Werror=implicit-function-declaration]
   __sdt_free(cpu_map); /* fall through */
   ^~~~~~~~~~
   bioset_free
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:6454:21: error: invalid storage class for function ‘__visit_domain_allocation_hell’
 static enum s_alloc __visit_domain_allocation_hell(struct s_data *d,
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__visit_domain_allocation_hell’:
kernel/sched/core.c:6459:6: error: implicit declaration of function ‘__sdt_alloc’; did you mean ‘__pte_alloc’? [-Werror=implicit-function-declaration]
  if (__sdt_alloc(cpu_map))
      ^~~~~~~~~~~
      __pte_alloc
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:6475:13: error: invalid storage class for function ‘claim_allocations’
 static void claim_allocations(int cpu, struct sched_domain *sd)
             ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:6528:1: error: invalid storage class for function ‘sd_init’
 sd_init(struct sched_domain_topology_level *tl,
 ^~~~~~~
kernel/sched/core.c:6679:30: error: invalid storage class for function ‘sd_numa_mask’
 static const struct cpumask *sd_numa_mask(int cpu)
                              ^~~~~~~~~~~~
kernel/sched/core.c:6684:13: error: invalid storage class for function ‘sched_numa_warn’
 static void sched_numa_warn(const char *str)
             ^~~~~~~~~~~~~~~
kernel/sched/core.c:6739:13: error: invalid storage class for function ‘init_numa_topology_type’
 static void init_numa_topology_type(void)
             ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6772:13: error: invalid storage class for function ‘sched_init_numa’
 static void sched_init_numa(void)
             ^~~~~~~~~~~~~~~
kernel/sched/core.c:6913:13: error: invalid storage class for function ‘sched_domains_numa_masks_set’
 static void sched_domains_numa_masks_set(unsigned int cpu)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6926:13: error: invalid storage class for function ‘sched_domains_numa_masks_clear’
 static void sched_domains_numa_masks_clear(unsigned int cpu)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:6942:12: error: invalid storage class for function ‘__sdt_alloc’
 static int __sdt_alloc(const struct cpumask *cpu_map)
            ^~~~~~~~~~~
kernel/sched/core.c:7007:13: error: invalid storage class for function ‘__sdt_free’
 static void __sdt_free(const struct cpumask *cpu_map)
             ^~~~~~~~~~
kernel/sched/core.c:7077:12: error: invalid storage class for function ‘build_sched_domains’
 static int build_sched_domains(const struct cpumask *cpu_map,
            ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7208:12: error: invalid storage class for function ‘init_sched_domains’
 static int init_sched_domains(const struct cpumask *cpu_map)
            ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7228:13: error: invalid storage class for function ‘detach_destroy_domains’
 static void detach_destroy_domains(const struct cpumask *cpu_map)
             ^~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7239:12: error: invalid storage class for function ‘dattrs_equal’
 static int dattrs_equal(struct sched_domain_attr *cur, int idx_cur,
            ^~~~~~~~~~~~
kernel/sched/core.c:7353:13: error: invalid storage class for function ‘cpuset_cpu_active’
 static void cpuset_cpu_active(void)
             ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:7376:12: error: invalid storage class for function ‘cpuset_cpu_inactive’
 static int cpuset_cpu_inactive(unsigned int cpu)
            ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7469:13: error: invalid storage class for function ‘sched_rq_cpu_starting’
 static void sched_rq_cpu_starting(unsigned int cpu)
             ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7511:13: error: invalid storage class for function ‘sched_init_smt’
 static void sched_init_smt(void)
             ^~~~~~~~~~~~~~
kernel/sched/core.c:7559:19: error: invalid storage class for function ‘migration_init’
 static int __init migration_init(void)
                   ^~~~~~~~~~~~~~
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7564:16: error: initializer element is not constant
 early_initcall(migration_init);
                ^~~~~~~~~~~~~~
./include/linux/init.h:161:58: note: in definition of macro ‘__define_initcall’
  __attribute__((__section__(".initcall" #id ".init"))) = fn;
                                                          ^~
kernel/sched/core.c:7564:1: note: in expansion of macro ‘early_initcall’
 early_initcall(migration_init);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:7573:1: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 int in_sched_functions(unsigned long addr)
 ^~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7592:32: error: section attribute cannot be specified for local variables
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
                                ^~~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7592:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:7593:32: error: section attribute cannot be specified for local variables
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
                                ^~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7593:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
 ^~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7606:15: error: non-static declaration of ‘bit_waitqueue’ follows static declaration
 EXPORT_SYMBOL(bit_waitqueue);
               ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:7606:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(bit_waitqueue);
 ^~~~~~~~~~~~~
kernel/sched/core.c:7599:20: note: previous definition of ‘bit_waitqueue’ was here
 wait_queue_head_t *bit_waitqueue(void *word, int bit)
                    ^~~~~~~~~~~~~
kernel/sched/core.c:7941:13: error: invalid storage class for function ‘sched_free_group’
 static void sched_free_group(struct task_group *tg)
             ^~~~~~~~~~~~~~~~
kernel/sched/core.c:7989:13: error: invalid storage class for function ‘sched_free_group_rcu’
 static void sched_free_group_rcu(struct rcu_head *rhp)
             ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8014:13: error: invalid storage class for function ‘sched_change_group’
 static void sched_change_group(struct task_struct *tsk, int type)
             ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8283:12: error: invalid storage class for function ‘sched_rt_global_constraints’
 static int sched_rt_global_constraints(void)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8302:12: error: invalid storage class for function ‘sched_dl_global_validate’
 static int sched_dl_global_validate(void)
            ^~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8338:13: error: invalid storage class for function ‘sched_dl_do_global’
 static void sched_dl_do_global(void)
             ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8366:12: error: invalid storage class for function ‘sched_rt_global_validate’
 static int sched_rt_global_validate(void)
            ^~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8378:13: error: invalid storage class for function ‘sched_rt_do_global’
 static void sched_rt_do_global(void)
             ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8445:34: error: invalid storage class for function ‘css_tg’
 static inline struct task_group *css_tg(struct cgroup_subsys_state *css)
                                  ^~~~~~
kernel/sched/core.c:8451:1: error: invalid storage class for function ‘cpu_cgroup_css_alloc’
 cpu_cgroup_css_alloc(struct cgroup_subsys_state *parent_css)
 ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8470:13: error: invalid storage class for function ‘cpu_cgroup_css_released’
 static void cpu_cgroup_css_released(struct cgroup_subsys_state *css)
             ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8477:13: error: invalid storage class for function ‘cpu_cgroup_css_free’
 static void cpu_cgroup_css_free(struct cgroup_subsys_state *css)
             ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8491:13: error: invalid storage class for function ‘cpu_cgroup_fork’
 static void cpu_cgroup_fork(struct task_struct *task)
             ^~~~~~~~~~~~~~~
kernel/sched/core.c:8503:12: error: invalid storage class for function ‘cpu_cgroup_can_attach’
 static int cpu_cgroup_can_attach(struct cgroup_taskset *tset)
            ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8538:13: error: invalid storage class for function ‘cpu_cgroup_attach’
 static void cpu_cgroup_attach(struct cgroup_taskset *tset)
             ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:8548:12: error: invalid storage class for function ‘cpu_shares_write_u64’
 static int cpu_shares_write_u64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8554:12: error: invalid storage class for function ‘cpu_shares_read_u64’
 static u64 cpu_shares_read_u64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8568:12: error: invalid storage class for function ‘__cfs_schedulable’
 static int __cfs_schedulable(struct task_group *tg, u64 period, u64 runtime);
            ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:8570:12: error: invalid storage class for function ‘tg_set_cfs_bandwidth’
 static int tg_set_cfs_bandwidth(struct task_group *tg, u64 period, u64 quota)
            ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘tg_set_cfs_bandwidth’:
kernel/sched/core.c:8600:8: error: implicit declaration of function ‘__cfs_schedulable’; did you mean ‘__schedule’? [-Werror=implicit-function-declaration]
  ret = __cfs_schedulable(tg, period, quota);
        ^~~~~~~~~~~~~~~~~
        __schedule
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:8689:12: error: invalid storage class for function ‘cpu_cfs_quota_read_s64’
 static s64 cpu_cfs_quota_read_s64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8695:12: error: invalid storage class for function ‘cpu_cfs_quota_write_s64’
 static int cpu_cfs_quota_write_s64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8701:12: error: invalid storage class for function ‘cpu_cfs_period_read_u64’
 static u64 cpu_cfs_period_read_u64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8707:12: error: invalid storage class for function ‘cpu_cfs_period_write_u64’
 static int cpu_cfs_period_write_u64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8722:12: error: invalid storage class for function ‘normalize_cfs_quota’
 static u64 normalize_cfs_quota(struct task_group *tg,
            ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8742:12: error: invalid storage class for function ‘tg_cfs_schedulable_down’
 static int tg_cfs_schedulable_down(struct task_group *tg, void *data)
            ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8770:12: error: invalid storage class for function ‘__cfs_schedulable’
 static int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)
            ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:8791:12: error: invalid storage class for function ‘cpu_stats_show’
 static int cpu_stats_show(struct seq_file *sf, void *v)
            ^~~~~~~~~~~~~~
kernel/sched/core.c:8835:15: error: initializer element is not constant
   .read_u64 = cpu_shares_read_u64,
               ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8835:15: note: (near initialization for ‘cpu_files[0].read_u64’)
kernel/sched/core.c:8836:16: error: initializer element is not constant
   .write_u64 = cpu_shares_write_u64,
                ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8836:16: note: (near initialization for ‘cpu_files[0].write_u64’)
kernel/sched/core.c:8842:15: error: initializer element is not constant
   .read_s64 = cpu_cfs_quota_read_s64,
               ^~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8842:15: note: (near initialization for ‘cpu_files[1].read_s64’)
kernel/sched/core.c:8843:16: error: initializer element is not constant
   .write_u64 = cpu_cfs_period_write_u64,
                ^~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8843:16: note: (near initialization for ‘cpu_files[1].write_u64’)
kernel/sched/core.c:8847:15: error: initializer element is not constant
   .seq_show = cpu_stats_show,
               ^~~~~~~~~~~~~~
kernel/sched/core.c:8847:15: note: (near initialization for ‘cpu_files[2].seq_show’)
kernel/sched/core.c:8923:1: error: expected declaration or statement at end of input
 };
 ^
kernel/sched/core.c:8914:11: warning: unused variable ‘sched_prio_to_wmult’ [-Wunused-variable]
 const u32 sched_prio_to_wmult[40] = {
           ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8896:11: warning: unused variable ‘sched_prio_to_weight’ [-Wunused-variable]
 const int sched_prio_to_weight[40] = {
           ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8865:22: warning: unused variable ‘cpu_cgrp_subsys’ [-Wunused-variable]
 struct cgroup_subsys cpu_cgrp_subsys = {
                      ^~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7593:32: warning: unused variable ‘select_idle_mask’ [-Wunused-variable]
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
                                ^~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7593:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:7592:32: warning: unused variable ‘load_balance_mask’ [-Wunused-variable]
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
                                ^~~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7592:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
 ^~~~~~~~~~~~~~~
At top level:
kernel/sched/core.c:8878:6: warning: ‘dump_cpu_task’ defined but not used [-Wunused-function]
 void dump_cpu_task(int cpu)
      ^~~~~~~~~~~~~
kernel/sched/core.c:8770:12: warning: ‘__cfs_schedulable’ defined but not used [-Wunused-function]
 static int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)
            ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:8701:12: warning: ‘cpu_cfs_period_read_u64’ defined but not used [-Wunused-function]
 static u64 cpu_cfs_period_read_u64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8695:12: warning: ‘cpu_cfs_quota_write_s64’ defined but not used [-Wunused-function]
 static int cpu_cfs_quota_write_s64(struct cgroup_subsys_state *css,
            ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8424:5: warning: ‘sched_rr_handler’ defined but not used [-Wunused-function]
 int sched_rr_handler(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~
kernel/sched/core.c:8384:5: warning: ‘sched_rt_handler’ defined but not used [-Wunused-function]
 int sched_rt_handler(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~
kernel/sched/core.c:7995:6: warning: ‘sched_destroy_group’ defined but not used [-Wunused-function]
 void sched_destroy_group(struct task_group *tg)
      ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7851:6: warning: ‘normalize_rt_tasks’ defined but not used [-Wunused-function]
 void normalize_rt_tasks(void)
      ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7608:13: warning: ‘sched_init’ defined but not used [-Wunused-function]
 void __init sched_init(void)
             ^~~~~~~~~~
kernel/sched/core.c:7573:5: warning: ‘in_sched_functions’ defined but not used [-Wunused-function]
 int in_sched_functions(unsigned long addr)
     ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7524:13: warning: ‘sched_init_smp’ defined but not used [-Wunused-function]
 void __init sched_init_smp(void)
             ^~~~~~~~~~~~~~
kernel/sched/core.c:7485:5: warning: ‘sched_cpu_dying’ defined but not used [-Wunused-function]
 int sched_cpu_dying(unsigned int cpu)
     ^~~~~~~~~~~~~~~
kernel/sched/core.c:7477:5: warning: ‘sched_cpu_starting’ defined but not used [-Wunused-function]
 int sched_cpu_starting(unsigned int cpu)
     ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7437:5: warning: ‘sched_cpu_deactivate’ defined but not used [-Wunused-function]
 int sched_cpu_deactivate(unsigned int cpu)
     ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7404:5: warning: ‘sched_cpu_activate’ defined but not used [-Wunused-function]
 int sched_cpu_activate(unsigned int cpu)
     ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7007:13: warning: ‘__sdt_free’ defined but not used [-Wunused-function]
 static void __sdt_free(const struct cpumask *cpu_map)
             ^~~~~~~~~~
kernel/sched/core.c:6942:12: warning: ‘__sdt_alloc’ defined but not used [-Wunused-function]
 static int __sdt_alloc(const struct cpumask *cpu_map)
            ^~~~~~~~~~~
kernel/sched/core.c:6669:6: warning: ‘set_sched_topology’ defined but not used [-Wunused-function]
 void set_sched_topology(struct sched_domain_topology_level *tl)
      ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5548:6: warning: ‘idle_task_exit’ defined but not used [-Wunused-function]
 void idle_task_exit(void)
      ^~~~~~~~~~~~~~
kernel/sched/core.c:5518:6: warning: ‘sched_setnuma’ defined but not used [-Wunused-function]
 void sched_setnuma(struct task_struct *p, int nid)
      ^~~~~~~~~~~~~
kernel/sched/core.c:5497:5: warning: ‘migrate_task_to’ defined but not used [-Wunused-function]
 int migrate_task_to(struct task_struct *p, int target_cpu)
     ^~~~~~~~~~~~~~~
kernel/sched/core.c:5437:5: warning: ‘task_can_attach’ defined but not used [-Wunused-function]
 int task_can_attach(struct task_struct *p,
     ^~~~~~~~~~~~~~~
kernel/sched/core.c:5413:5: warning: ‘cpuset_cpumask_can_shrink’ defined but not used [-Wunused-function]
 int cpuset_cpumask_can_shrink(const struct cpumask *cur,
     ^~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5341:6: warning: ‘init_idle_bootup_task’ defined but not used [-Wunused-function]
 void init_idle_bootup_task(struct task_struct *idle)
      ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5303:6: warning: ‘show_state_filter’ defined but not used [-Wunused-function]
 void show_state_filter(unsigned long state_filter)
      ^~~~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_rr_get_interval’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5231:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_get_priority_min’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5202:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_get_priority_max’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5175:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getaffinity’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4928:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setaffinity’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4876:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getattr’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4725:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getparam’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4647:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getscheduler’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4618:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setattr’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4584:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setparam’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4573:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setscheduler’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4556:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:3933:21: warning: ‘idle_task’ defined but not used [-Wunused-function]
 struct task_struct *idle_task(int cpu)
                     ^~~~~~~~~
kernel/sched/core.c:3909:5: warning: ‘idle_cpu’ defined but not used [-Wunused-function]
 int idle_cpu(int cpu)
     ^~~~~~~~
kernel/sched/core.c:3898:5: warning: ‘task_prio’ defined but not used [-Wunused-function]
 int task_prio(const struct task_struct *p)
     ^~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:199:18: warning: ‘SyS_nice’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3864:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:3696:6: warning: ‘rt_mutex_setprio’ defined but not used [-Wunused-function]
 void rt_mutex_setprio(struct task_struct *p, int prio)
      ^~~~~~~~~~~~~~~~
kernel/sched/core.c:3656:35: warning: ‘preempt_schedule_irq’ defined but not used [-Wunused-function]
 asmlinkage __visible void __sched preempt_schedule_irq(void)
                                   ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3540:14: warning: ‘schedule_preempt_disabled’ defined but not used [-Wunused-function]
 void __sched schedule_preempt_disabled(void)
              ^~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3464:17: warning: ‘do_task_dead’ defined but not used [-Wunused-function]
 void __noreturn do_task_dead(void)
                 ^~~~~~~~~~~~
kernel/sched/core.c:3115:6: warning: ‘scheduler_tick’ defined but not used [-Wunused-function]
 void scheduler_tick(void)
      ^~~~~~~~~~~~~~
kernel/sched/core.c:3072:20: warning: ‘task_sched_runtime’ defined but not used [-Wunused-function]
 unsigned long long task_sched_runtime(struct task_struct *p)
                    ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3020:6: warning: ‘sched_exec’ defined but not used [-Wunused-function]
 void sched_exec(void)
      ^~~~~~~~~~
kernel/sched/core.c:3007:6: warning: ‘get_iowait_load’ defined but not used [-Wunused-function]
 void get_iowait_load(unsigned long *nr_waiters, unsigned long *load)
      ^~~~~~~~~~~~~~~
kernel/sched/core.c:3001:15: warning: ‘nr_iowait_cpu’ defined but not used [-Wunused-function]
 unsigned long nr_iowait_cpu(int cpu)
               ^~~~~~~~~~~~~
kernel/sched/core.c:2991:15: warning: ‘nr_iowait’ defined but not used [-Wunused-function]
 unsigned long nr_iowait(void)
               ^~~~~~~~~
kernel/sched/core.c:2980:20: warning: ‘nr_context_switches’ defined but not used [-Wunused-function]
 unsigned long long nr_context_switches(void)
                    ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2951:15: warning: ‘nr_running’ defined but not used [-Wunused-function]
 unsigned long nr_running(void)
               ^~~~~~~~~~
kernel/sched/core.c:2870:27: warning: ‘schedule_tail’ defined but not used [-Wunused-function]
 asmlinkage __visible void schedule_tail(struct task_struct *prev)
                           ^~~~~~~~~~~~~
kernel/sched/core.c:2591:6: warning: ‘wake_up_new_task’ defined but not used [-Wunused-function]
 void wake_up_new_task(struct task_struct *p)
      ^~~~~~~~~~~~~~~~
kernel/sched/core.c:2394:5: warning: ‘sched_fork’ defined but not used [-Wunused-function]
 int sched_fork(unsigned long clone_flags, struct task_struct *p)
     ^~~~~~~~~~
kernel/sched/core.c:2367:5: warning: ‘sysctl_schedstats’ defined but not used [-Wunused-function]
 int sysctl_schedstats(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2327:6: warning: ‘force_schedstat_enabled’ defined but not used [-Wunused-function]
 void force_schedstat_enabled(void)
      ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2292:5: warning: ‘sysctl_numa_balancing’ defined but not used [-Wunused-function]
 int sysctl_numa_balancing(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~~~~~~
cc1: some warnings being treated as errors
make[4]: *** [scripts/Makefile.build:293: kernel/sched/core.o] Error 1
make[3]: *** [scripts/Makefile.build:544: kernel/sched] Error 2
make[3]: *** Waiting for unfinished jobs....
kernel/exit.o: warning: objtool: do_exit.cold.19()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_stat.o
kernel/fork.o: warning: objtool: __mmdrop.cold.43()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_printk.o
  CC      fsac/fsac.o
  LD      kernel/locking/built-in.o
  CC      fsac/fsac_list.o
  CC      fsac/fsac_plugin.o
kernel/trace/trace_output.o: warning: objtool: register_trace_event.cold.8()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_sched_switch.o
In file included from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
fsac/fsac_list.c: In function ‘fsac_remove_list’:
./include/linux/list.h:429:19: error: ‘ghost_node’ is a pointer; did you mean to use ‘->’?
  for (pos = (head)->next, n = pos->next; pos != (head); \
                   ^~
fsac/fsac_list.c:16:9: note: in expansion of macro ‘list_for_each_safe’
         list_for_each_safe(cur_node, aux, &ghost_node) {
         ^~~~~~~~~~~~~~~~~~
./include/linux/list.h:429:25: warning: left-hand operand of comma expression has no effect [-Wunused-value]
  for (pos = (head)->next, n = pos->next; pos != (head); \
                         ^
fsac/fsac_list.c:16:9: note: in expansion of macro ‘list_for_each_safe’
         list_for_each_safe(cur_node, aux, &ghost_node) {
         ^~~~~~~~~~~~~~~~~~
./include/linux/list.h:429:46: warning: comparison of distinct pointer types lacks a cast
  for (pos = (head)->next, n = pos->next; pos != (head); \
                                              ^~
fsac/fsac_list.c:16:9: note: in expansion of macro ‘list_for_each_safe’
         list_for_each_safe(cur_node, aux, &ghost_node) {
         ^~~~~~~~~~~~~~~~~~
In file included from ./include/linux/list.h:8,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
./include/linux/kernel.h:836:27: error: dereferencing pointer to incomplete type ‘struct list_item’
  const typeof( ((type *)0)->member ) *__mptr = (ptr); \
                           ^~
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:18:24: note: in expansion of macro ‘list_entry’
                 item = list_entry(cur_node, struct list_item, links);
                        ^~~~~~~~~~
./include/linux/kernel.h:836:48: error: initialization of ‘const int *’ from incompatible pointer type ‘struct list_head *’ [-Werror=incompatible-pointer-types]
  const typeof( ((type *)0)->member ) *__mptr = (ptr); \
                                                ^
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:18:24: note: in expansion of macro ‘list_entry’
                 item = list_entry(cur_node, struct list_item, links);
                        ^~~~~~~~~~
In file included from ./include/linux/compiler.h:58,
                 from ./include/uapi/linux/stddef.h:1,
                 from ./include/linux/stddef.h:4,
                 from ./include/uapi/linux/posix_types.h:4,
                 from ./include/uapi/linux/types.h:13,
                 from ./include/linux/types.h:5,
                 from ./include/linux/list.h:4,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
./include/linux/compiler-gcc.h:159:2: error: invalid use of undefined type ‘struct list_item’
  __builtin_offsetof(a, b)
  ^~~~~~~~~~~~~~~~~~
./include/linux/stddef.h:16:32: note: in expansion of macro ‘__compiler_offsetof’
 #define offsetof(TYPE, MEMBER) __compiler_offsetof(TYPE, MEMBER)
                                ^~~~~~~~~~~~~~~~~~~
./include/linux/kernel.h:837:29: note: in expansion of macro ‘offsetof’
  (type *)( (char *)__mptr - offsetof(type,member) );})
                             ^~~~~~~~
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:18:24: note: in expansion of macro ‘list_entry’
                 item = list_entry(cur_node, struct list_item, links);
                        ^~~~~~~~~~
In file included from ./include/linux/list.h:8,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
fsac/fsac_list.c: In function ‘fsac_print_list’:
./include/linux/kernel.h:836:27: error: dereferencing pointer to incomplete type ‘struct list_item’
  const typeof( ((type *)0)->member ) *__mptr = (ptr); \
                           ^~
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:37:10: note: in expansion of macro ‘list_entry’
   item = list_entry(cur_node, struct list_item, links);
          ^~~~~~~~~~
./include/linux/kernel.h:836:48: error: initialization of ‘const int *’ from incompatible pointer type ‘struct list_head *’ [-Werror=incompatible-pointer-types]
  const typeof( ((type *)0)->member ) *__mptr = (ptr); \
                                                ^
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:37:10: note: in expansion of macro ‘list_entry’
   item = list_entry(cur_node, struct list_item, links);
          ^~~~~~~~~~
In file included from ./include/linux/compiler.h:58,
                 from ./include/uapi/linux/stddef.h:1,
                 from ./include/linux/stddef.h:4,
                 from ./include/uapi/linux/posix_types.h:4,
                 from ./include/uapi/linux/types.h:13,
                 from ./include/linux/types.h:5,
                 from ./include/linux/list.h:4,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
./include/linux/compiler-gcc.h:159:2: error: invalid use of undefined type ‘struct list_item’
  __builtin_offsetof(a, b)
  ^~~~~~~~~~~~~~~~~~
./include/linux/stddef.h:16:32: note: in expansion of macro ‘__compiler_offsetof’
 #define offsetof(TYPE, MEMBER) __compiler_offsetof(TYPE, MEMBER)
                                ^~~~~~~~~~~~~~~~~~~
./include/linux/kernel.h:837:29: note: in expansion of macro ‘offsetof’
  (type *)( (char *)__mptr - offsetof(type,member) );})
                             ^~~~~~~~
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:36:10: note: in expansion of macro ‘list_entry’
   item = list_entry(cur_node, struct list_item, links);
          ^~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/list.h:8,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
./include/linux/export.h:58:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  extern typeof(sym) sym;      \
  ^~~~~~
./include/linux/export.h:93:25: note: in expansion of macro ‘___EXPORT_SYMBOL’
 #define __EXPORT_SYMBOL ___EXPORT_SYMBOL
                         ^~~~~~~~~~~~~~~~
./include/linux/export.h:97:2: note: in expansion of macro ‘__EXPORT_SYMBOL’
  __EXPORT_SYMBOL(sym, "")
  ^~~~~~~~~~~~~~~
fsac/fsac_list.c:55:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(fsac_print_list);
 ^~~~~~~~~~~~~
In file included from ./include/linux/list.h:8,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
fsac/fsac_list.c: In function ‘fsac_find_node’:
./include/linux/kernel.h:836:48: error: initialization of ‘const int *’ from incompatible pointer type ‘struct list_head *’ [-Werror=incompatible-pointer-types]
  const typeof( ((type *)0)->member ) *__mptr = (ptr); \
                                                ^
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:66:10: note: in expansion of macro ‘list_entry’
   item = list_entry(pos, struct list_item, links);
          ^~~~~~~~~~
In file included from ./include/linux/compiler.h:58,
                 from ./include/uapi/linux/stddef.h:1,
                 from ./include/linux/stddef.h:4,
                 from ./include/uapi/linux/posix_types.h:4,
                 from ./include/uapi/linux/types.h:13,
                 from ./include/linux/types.h:5,
                 from ./include/linux/list.h:4,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
./include/linux/compiler-gcc.h:159:2: error: invalid use of undefined type ‘struct list_item’
  __builtin_offsetof(a, b)
  ^~~~~~~~~~~~~~~~~~
./include/linux/stddef.h:16:32: note: in expansion of macro ‘__compiler_offsetof’
 #define offsetof(TYPE, MEMBER) __compiler_offsetof(TYPE, MEMBER)
                                ^~~~~~~~~~~~~~~~~~~
./include/linux/kernel.h:837:29: note: in expansion of macro ‘offsetof’
  (type *)( (char *)__mptr - offsetof(type,member) );})
                             ^~~~~~~~
./include/linux/list.h:352:2: note: in expansion of macro ‘container_of’
  container_of(ptr, type, member)
  ^~~~~~~~~~~~
fsac/fsac_list.c:66:10: note: in expansion of macro ‘list_entry’
   item = list_entry(pos, struct list_item, links);
          ^~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/list.h:8,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
fsac/fsac_list.c: In function ‘fsac_print_list’:
fsac/fsac_list.c:79:15: error: non-static declaration of ‘fsac_find_node’ follows static declaration
 EXPORT_SYMBOL(fsac_find_node);
               ^~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
fsac/fsac_list.c:79:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(fsac_find_node);
 ^~~~~~~~~~~~~
fsac/fsac_list.c:57:19: note: previous definition of ‘fsac_find_node’ was here
 struct list_head* fsac_find_node(int n, char *c, struct list_head* head){
                   ^~~~~~~~~~~~~~
fsac/fsac_list.c: In function ‘fsac_copy_safe’:
fsac/fsac_list.c:92:12: error: implicit declaration of function ‘copy_from_user’; did you mean ‘kstrtos8_from_user’? [-Werror=implicit-function-declaration]
         if(copy_from_user(kbuf, ubuf, ksize))
            ^~~~~~~~~~~~~~
            kstrtos8_from_user
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/list.h:8,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
fsac/fsac_list.c: In function ‘fsac_print_list’:
fsac/fsac_list.c:102:15: error: non-static declaration of ‘fsac_copy_safe’ follows static declaration
 EXPORT_SYMBOL(fsac_copy_safe);
               ^~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
fsac/fsac_list.c:102:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(fsac_copy_safe);
 ^~~~~~~~~~~~~
fsac/fsac_list.c:82:5: note: previous definition of ‘fsac_copy_safe’ was here
 int fsac_copy_safe(char *kbuf, unsigned long ksize,
     ^~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/list.h:8,
                 from ./include/fsac/fsac_list.h:11,
                 from fsac/fsac_list.c:7:
./include/linux/export.h:63:22: error: expected declaration or statement at end of input
  static const struct kernel_symbol __ksymtab_##sym  \
                      ^~~~~~~~~~~~~
./include/linux/export.h:93:25: note: in expansion of macro ‘___EXPORT_SYMBOL’
 #define __EXPORT_SYMBOL ___EXPORT_SYMBOL
                         ^~~~~~~~~~~~~~~~
./include/linux/export.h:97:2: note: in expansion of macro ‘__EXPORT_SYMBOL’
  __EXPORT_SYMBOL(sym, "")
  ^~~~~~~~~~~~~~~
fsac/fsac_list.c:102:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(fsac_copy_safe);
 ^~~~~~~~~~~~~
./include/linux/export.h:63:22: warning: control reaches end of non-void function [-Wreturn-type]
  static const struct kernel_symbol __ksymtab_##sym  \
                      ^~~~~~~~~~~~~
./include/linux/export.h:93:25: note: in expansion of macro ‘___EXPORT_SYMBOL’
 #define __EXPORT_SYMBOL ___EXPORT_SYMBOL
                         ^~~~~~~~~~~~~~~~
./include/linux/export.h:97:2: note: in expansion of macro ‘__EXPORT_SYMBOL’
  __EXPORT_SYMBOL(sym, "")
  ^~~~~~~~~~~~~~~
fsac/fsac_list.c:102:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(fsac_copy_safe);
 ^~~~~~~~~~~~~
cc1: some warnings being treated as errors
make[3]: *** [scripts/Makefile.build:293: fsac/fsac_list.o] Error 1
make[3]: *** Waiting for unfinished jobs....
  CC      kernel/trace/trace_functions.o
fsac/fsac.c: In function ‘fsac_fork’:
fsac/fsac.c:43:6: error: implicit declaration of function ‘if_fsac’; did you mean ‘is_fsac’? [-Werror=implicit-function-declaration]
  if (if_fsac(p)){
      ^~~~~~~
      is_fsac
fsac/fsac.c:46:11: error: dereferencing pointer to incomplete type ‘struct sched_plugin’
   if (fsac->fork_task(p)){
           ^~
fsac/fsac.c:47:8: error: implicit declaration of function ‘__fsac_admit_task’; did you mean ‘fsac_admit_task’? [-Werror=implicit-function-declaration]
    if (__fsac_admit_task(p)){
        ^~~~~~~~~~~~~~~~~
        fsac_admit_task
fsac/fsac.c: In function ‘fsac_clear_state’:
fsac/fsac.c:72:13: error: passing argument 1 of ‘atomic_dec’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  atomic_dec(&fsac_task_count);
             ^~~~~~~~~~~~~~~~
In file included from ./arch/x86/include/asm/msr.h:66,
                 from ./arch/x86/include/asm/processor.h:20,
                 from ./arch/x86/include/asm/cpufeature.h:4,
                 from ./arch/x86/include/asm/thread_info.h:52,
                 from ./include/linux/thread_info.h:58,
                 from ./arch/x86/include/asm/preempt.h:6,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/linux/stat.h:18,
                 from ./include/linux/module.h:10,
                 from ./include/fsac/fsac.h:12,
                 from fsac/fsac.c:9:
./arch/x86/include/asm/atomic.h:101:50: note: expected ‘atomic_t *’ {aka ‘struct <anonymous> *’} but argument is of type ‘long unsigned int *’
 static __always_inline void atomic_dec(atomic_t *v)
                                        ~~~~~~~~~~^
In file included from fsac/fsac.c:9:
fsac/fsac.c: In function ‘fsac_is_real_time’:
fsac/fsac.c:87:13: error: ‘t’ undeclared (first use in this function); did you mean ‘tm’?
  if(is_fsac(t)) {
             ^
./include/fsac/fsac.h:34:25: note: in definition of macro ‘is_fsac’
 #define is_fsac(t)    ((t)->policy == SCHED_FSAC)
                         ^
fsac/fsac.c:87:13: note: each undeclared identifier is reported only once for each function it appears in
  if(is_fsac(t)) {
             ^
./include/fsac/fsac.h:34:25: note: in definition of macro ‘is_fsac’
 #define is_fsac(t)    ((t)->policy == SCHED_FSAC)
                         ^
fsac/fsac.c: At top level:
fsac/fsac.c:95:13: error: conflicting types for ‘__fsac_admit_task’
 static long __fsac_admit_task(struct task_struct *tsk) {
             ^~~~~~~~~~~~~~~~~
fsac/fsac.c:47:8: note: previous implicit declaration of ‘__fsac_admit_task’ was here
    if (__fsac_admit_task(p)){
        ^~~~~~~~~~~~~~~~~
fsac/fsac.c: In function ‘__fsac_admit_task’:
fsac/fsac.c:101:14: error: passing argument 1 of ‘atomic_inc’ from incompatible pointer type [-Werror=incompatible-pointer-types]
   atomic_inc(&fsac_task_count);
              ^~~~~~~~~~~~~~~~
In file included from ./arch/x86/include/asm/msr.h:66,
                 from ./arch/x86/include/asm/processor.h:20,
                 from ./arch/x86/include/asm/cpufeature.h:4,
                 from ./arch/x86/include/asm/thread_info.h:52,
                 from ./include/linux/thread_info.h:58,
                 from ./arch/x86/include/asm/preempt.h:6,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/linux/stat.h:18,
                 from ./include/linux/module.h:10,
                 from ./include/fsac/fsac.h:12,
                 from fsac/fsac.c:9:
./arch/x86/include/asm/atomic.h:89:50: note: expected ‘atomic_t *’ {aka ‘struct <anonymous> *’} but argument is of type ‘long unsigned int *’
 static __always_inline void atomic_inc(atomic_t *v)
                                        ~~~~~~~~~~^
fsac/fsac.c: In function ‘fsac_admit_task’:
fsac/fsac.c:115:5: error: ‘retval’ undeclared (first use in this function); did you mean ‘ret’?
     retval = __fsac_admit_task(tsk);
     ^~~~~~
     ret
fsac/fsac.c: In function ‘__do_plugin_switch’:
fsac/fsac.c:142:17: error: passing argument 1 of ‘atomic_read’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  if(atomic_read(&fsac_task_count) == 0) {
                 ^~~~~~~~~~~~~~~~
In file included from ./arch/x86/include/asm/msr.h:66,
                 from ./arch/x86/include/asm/processor.h:20,
                 from ./arch/x86/include/asm/cpufeature.h:4,
                 from ./arch/x86/include/asm/thread_info.h:52,
                 from ./include/linux/thread_info.h:58,
                 from ./arch/x86/include/asm/preempt.h:6,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/linux/stat.h:18,
                 from ./include/linux/module.h:10,
                 from ./include/fsac/fsac.h:12,
                 from fsac/fsac.c:9:
./arch/x86/include/asm/atomic.h:24:56: note: expected ‘const atomic_t *’ {aka ‘const struct <anonymous> *’} but argument is of type ‘long unsigned int *’
 static __always_inline int atomic_read(const atomic_t *v)
                                        ~~~~~~~~~~~~~~~~^
In file included from ./include/linux/kernel.h:12,
                 from ./include/fsac/fsac.h:11,
                 from fsac/fsac.c:9:
fsac/fsac.c: In function ‘do_plugin_switch’:
./include/linux/typecheck.h:11:18: warning: comparison of distinct pointer types lacks a cast
  (void)(&__dummy == &__dummy2); \
                  ^~
./include/linux/irqflags.h:73:3: note: in expansion of macro ‘typecheck’
   typecheck(unsigned long, flags); \
   ^~~~~~~~~
./include/linux/irqflags.h:131:33: note: in expansion of macro ‘raw_local_save_flags’
 #define local_save_flags(flags) raw_local_save_flags(flags)
                                 ^~~~~~~~~~~~~~~~~~~~
fsac/fsac.c:173:2: note: in expansion of macro ‘local_save_flags’
  local_save_flags(flags);
  ^~~~~~~~~~~~~~~~
In file included from ./arch/x86/include/asm/processor.h:31,
                 from ./arch/x86/include/asm/cpufeature.h:4,
                 from ./arch/x86/include/asm/thread_info.h:52,
                 from ./include/linux/thread_info.h:58,
                 from ./arch/x86/include/asm/preempt.h:6,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/linux/stat.h:18,
                 from ./include/linux/module.h:10,
                 from ./include/fsac/fsac.h:12,
                 from fsac/fsac.c:9:
./include/linux/irqflags.h:74:9: warning: assignment to ‘long unsigned int *’ from ‘long unsigned int’ makes pointer from integer without a cast [-Wint-conversion]
   flags = arch_local_save_flags(); \
         ^
./include/linux/irqflags.h:131:33: note: in expansion of macro ‘raw_local_save_flags’
 #define local_save_flags(flags) raw_local_save_flags(flags)
                                 ^~~~~~~~~~~~~~~~~~~~
fsac/fsac.c:173:2: note: in expansion of macro ‘local_save_flags’
  local_save_flags(flags);
  ^~~~~~~~~~~~~~~~
In file included from ./include/linux/kernel.h:12,
                 from ./include/fsac/fsac.h:11,
                 from fsac/fsac.c:9:
./include/linux/typecheck.h:11:18: warning: comparison of distinct pointer types lacks a cast
  (void)(&__dummy == &__dummy2); \
                  ^~
./include/linux/irqflags.h:68:3: note: in expansion of macro ‘typecheck’
   typecheck(unsigned long, flags); \
   ^~~~~~~~~
./include/linux/irqflags.h:126:39: note: in expansion of macro ‘raw_local_irq_restore’
 #define local_irq_restore(flags) do { raw_local_irq_restore(flags); } while (0)
                                       ^~~~~~~~~~~~~~~~~~~~~
fsac/fsac.c:187:2: note: in expansion of macro ‘local_irq_restore’
  local_irq_restore(flags);
  ^~~~~~~~~~~~~~~~~
In file included from ./arch/x86/include/asm/processor.h:31,
                 from ./arch/x86/include/asm/cpufeature.h:4,
                 from ./arch/x86/include/asm/thread_info.h:52,
                 from ./include/linux/thread_info.h:58,
                 from ./arch/x86/include/asm/preempt.h:6,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/linux/stat.h:18,
                 from ./include/linux/module.h:10,
                 from ./include/fsac/fsac.h:12,
                 from fsac/fsac.c:9:
fsac/fsac.c:187:20: warning: passing argument 1 of ‘arch_local_irq_restore’ makes integer from pointer without a cast [-Wint-conversion]
  local_irq_restore(flags);
                    ^~~~~
./include/linux/irqflags.h:69:26: note: in definition of macro ‘raw_local_irq_restore’
   arch_local_irq_restore(flags);  \
                          ^~~~~
fsac/fsac.c:187:2: note: in expansion of macro ‘local_irq_restore’
  local_irq_restore(flags);
  ^~~~~~~~~~~~~~~~~
In file included from ./arch/x86/include/asm/msr.h:210,
                 from ./arch/x86/include/asm/processor.h:20,
                 from ./arch/x86/include/asm/cpufeature.h:4,
                 from ./arch/x86/include/asm/thread_info.h:52,
                 from ./include/linux/thread_info.h:58,
                 from ./arch/x86/include/asm/preempt.h:6,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/linux/stat.h:18,
                 from ./include/linux/module.h:10,
                 from ./include/fsac/fsac.h:12,
                 from fsac/fsac.c:9:
./arch/x86/include/asm/paravirt.h:765:65: note: expected ‘long unsigned int’ but argument is of type ‘long unsigned int *’
 static inline notrace void arch_local_irq_restore(unsigned long f)
                                                   ~~~~~~~~~~~~~~^
fsac/fsac.c: In function ‘switch_sched_plugin’:
fsac/fsac.c:201:18: error: passing argument 1 of ‘atomic_read’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  if (atomic_read(&fsac_task_count) == 0) {
                  ^~~~~~~~~~~~~~~~
In file included from ./arch/x86/include/asm/msr.h:66,
                 from ./arch/x86/include/asm/processor.h:20,
                 from ./arch/x86/include/asm/cpufeature.h:4,
                 from ./arch/x86/include/asm/thread_info.h:52,
                 from ./include/linux/thread_info.h:58,
                 from ./arch/x86/include/asm/preempt.h:6,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/linux/stat.h:18,
                 from ./include/linux/module.h:10,
                 from ./include/fsac/fsac.h:12,
                 from fsac/fsac.c:9:
./arch/x86/include/asm/atomic.h:24:56: note: expected ‘const atomic_t *’ {aka ‘const struct <anonymous> *’} but argument is of type ‘long unsigned int *’
 static __always_inline int atomic_read(const atomic_t *v)
                                        ~~~~~~~~~~~~~~~~^
fsac/fsac.c: In function ‘_init_fsac’:
fsac/fsac.c:244:1: warning: no return statement in function returning non-void [-Wreturn-type]
 }
 ^
fsac/fsac.c: In function ‘fsac_is_real_time’:
fsac/fsac.c:93:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
cc1: some warnings being treated as errors
make[3]: *** [scripts/Makefile.build:293: fsac/fsac.o] Error 1
  CC      fs/select.o
In file included from ./include/fsac/fsac.h:22,
                 from ./include/fsac/fsac_plugin.h:12,
                 from fsac/fsac_plugin.c:9:
./include/fsac/fsac_proc.h:23:29: warning: ‘struct sched_plugin’ declared inside parameter list will not be visible outside of this definition or declaration
 void add_plugin_proc(struct sched_plugin *plugin);
                             ^~~~~~~~~~~~
fsac/fsac_plugin.c:10:10: fatal error: fsac/np.h: No such file or directory
 #include <fsac/np.h>
          ^~~~~~~~~~~
compilation terminated.
make[3]: *** [scripts/Makefile.build:293: fsac/fsac_plugin.o] Error 1
make[2]: *** [Makefile:990: fsac] Error 2
make[2]: *** Waiting for unfinished jobs....
kernel/profile.o: warning: objtool: profile_setup.cold.11()+0x0: frame pointer state mismatch
kernel/time/hrtimer.o: warning: objtool: hrtimer_interrupt.cold.31()+0x0: frame pointer state mismatch
kernel/time/hrtimer.o: warning: objtool: hrtimer_run_queues.cold.32()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_nop.o
kernel/trace/trace_stat.o: warning: objtool: register_stat_tracer.cold.2()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_stack.o
  CC      kernel/trace/trace_mmiotrace.o
  LD      kernel/time/built-in.o
  CC      kernel/trace/trace_functions_graph.o
kernel/trace/trace_sched_switch.o: warning: objtool: tracing_start_cmdline_record.cold.0()+0x0: frame pointer state mismatch
  CC      kernel/trace/blktrace.o
  CC      kernel/trace/trace_events.o
kernel/trace/trace_stack.o: warning: objtool: check_stack.cold.2()+0x0: frame pointer state mismatch
kernel/trace/trace_nop.o: warning: objtool: nop_set_flag.cold.2()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_export.o
  CC      kernel/trace/trace_syscalls.o
  CC      kernel/trace/trace_event_perf.o
kernel/trace/trace_mmiotrace.o: warning: objtool: mmio_read.cold.6()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_events_filter.o
mm/page_alloc.o: warning: objtool: __parse_numa_zonelist_order.cold.100()+0x0: frame pointer state mismatch
mm/page_alloc.o: warning: objtool: bad_page.cold.101()+0x0: frame pointer state mismatch
mm/page_alloc.o: warning: objtool: free_reserved_area.cold.102()+0x0: frame pointer state mismatch
mm/page_alloc.o: warning: objtool: warn_alloc.cold.103()+0x0: frame pointer state mismatch
mm/page_alloc.o: warning: objtool: show_free_areas.cold.104()+0x0: frame pointer state mismatch
mm/page_alloc.o: warning: objtool: alloc_contig_range.cold.105()+0x0: frame pointer state mismatch
  LD      mm/built-in.o
  CC      kernel/trace/trace_events_trigger.o
kernel/trace/trace.o: warning: objtool: trace_options_init_dentry.part.38.cold.74()+0x0: frame pointer state mismatch
kernel/trace/trace.o: warning: objtool: trace_printk_init_buffers.cold.75()+0x0: frame pointer state mismatch
kernel/trace/trace.o: warning: objtool: trace_create_file.cold.76()+0x0: frame pointer state mismatch
kernel/trace/trace.o: warning: objtool: init_tracer_tracefs.cold.77()+0x0: frame pointer state mismatch
kernel/trace/trace.o: warning: objtool: tracing_init_dentry.cold.78()+0x0: frame pointer state mismatch
kernel/trace/trace.o: warning: objtool: trace_printk_seq.cold.79()+0x0: frame pointer state mismatch
kernel/trace/trace.o: warning: objtool: ftrace_dump.cold.80()+0x0: frame pointer state mismatch
  CC      kernel/trace/bpf_trace.o
kernel/trace/trace_syscalls.o: warning: objtool: syscall_enter_register.cold.21()+0x0: frame pointer state mismatch
kernel/trace/trace_syscalls.o: warning: objtool: syscall_exit_register.cold.22()+0x0: frame pointer state mismatch
  CC      kernel/trace/trace_kprobe.o
  CC      kernel/trace/power-traces.o
  CC      kernel/trace/rpm-traces.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/cz_dpm.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/dce_v10_0.o
  LD [M]  drivers/hid/hid.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/dce_v11_0.o
kernel/trace/trace_events.o: warning: objtool: __ftrace_event_enable_disable.cold.21()+0x0: frame pointer state mismatch
kernel/trace/trace_events.o: warning: objtool: create_event_toplevel_files.cold.22()+0x0: frame pointer state mismatch
kernel/trace/trace_events.o: warning: objtool: event_create_dir.cold.23()+0x0: frame pointer state mismatch
kernel/trace/trace_events.o: warning: objtool: trace_module_notify.cold.24()+0x0: frame pointer state mismatch
kernel/trace/trace_events.o: warning: objtool: event_trace_add_tracer.cold.25()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/amd/amdgpu/dce_virtual.o
  CC      kernel/trace/trace_probe.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.o
kernel/trace/trace_kprobe.o: warning: objtool: __register_trace_kprobe.part.7.cold.11()+0x0: frame pointer state mismatch
kernel/trace/trace_kprobe.o: warning: objtool: trace_kprobe_module_callback.cold.12()+0x0: frame pointer state mismatch
kernel/trace/trace_kprobe.o: warning: objtool: create_trace_kprobe.cold.13()+0x0: frame pointer state mismatch
  LD      drivers/gpu/drm/hisilicon/built-in.o
  LD      drivers/gpu/drm/i2c/built-in.o
kernel/trace/bpf_trace.o: warning: objtool: tracing_func_proto.cold.3()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/i2c/ch7006_drv.o
  LD      drivers/gpu/drm/mga/built-in.o
  LD      drivers/gpu/drm/mgag200/built-in.o
  CC [M]  drivers/gpu/drm/mga/mga_drv.o
  CC [M]  drivers/gpu/drm/i2c/ch7006_mode.o
  CC [M]  drivers/gpu/drm/mgag200/mgag200_main.o
  LD      drivers/gpu/drm/i915/built-in.o
  CC [M]  drivers/gpu/drm/i915/i915_drv.o
  LD [M]  drivers/hid/hid-logitech.o
  CC [M]  drivers/gpu/drm/mga/mga_dma.o
drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.o: warning: objtool: amdgpu_gfx_parse_disable_cu.cold.0()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/amd/amdgpu/gfx_v8_0.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/sdma_v2_4.o
kernel/trace/trace_probe.o: warning: objtool: parse_probe_arg.cold.9()+0x0: frame pointer state mismatch
kernel/trace/trace_probe.o: warning: objtool: traceprobe_parse_probe_arg.cold.10()+0x0: frame pointer state mismatch
kernel/trace/trace_probe.o: warning: objtool: traceprobe_probes_write.cold.11()+0x0: frame pointer state mismatch
  CC [M]  drivers/hid/hid-picolcd_core.o
drivers/gpu/drm/amd/amdgpu/cz_dpm.o: warning: objtool: cz_dpm_print_power_state.cold.17()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/amd/amdgpu/sdma_v3_0.o
  LD      kernel/trace/built-in.o
  CC [M]  drivers/gpu/drm/mga/mga_state.o
make[2]: *** [Makefile:990: kernel] Error 2
  CC [M]  drivers/gpu/drm/mga/mga_warp.o
  CC [M]  drivers/gpu/drm/i2c/sil164_drv.o
drivers/gpu/drm/mga/mga_dma.o: warning: objtool: mga_do_agp_dma_bootstrap.cold.3()+0x0: frame pointer state mismatch
drivers/gpu/drm/mga/mga_dma.o: warning: objtool: mga_dma_bootstrap.cold.4()+0x0: frame pointer state mismatch
  CC [M]  drivers/hid/hid-picolcd_fb.o
  CC [M]  drivers/gpu/drm/mga/mga_irq.o
drivers/hid/hid-picolcd_core.o: warning: objtool: picolcd_resume.cold.16()+0x0: frame pointer state mismatch
drivers/hid/hid-picolcd_core.o: warning: objtool: picolcd_remove.cold.17()+0x0: frame pointer state mismatch
drivers/hid/hid-picolcd_core.o: warning: objtool: picolcd_suspend.cold.18()+0x0: frame pointer state mismatch
drivers/hid/hid-picolcd_core.o: warning: objtool: picolcd_raw_event.cold.19()+0x0: frame pointer state mismatch
drivers/hid/hid-picolcd_core.o: warning: objtool: picolcd_probe.cold.20()+0x0: frame pointer state mismatch
drivers/hid/hid-picolcd_core.o: warning: objtool: picolcd_reset_resume.cold.21()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.o
  CC [M]  drivers/gpu/drm/mgag200/mgag200_mode.o
  CC [M]  drivers/hid/hid-picolcd_backlight.o
drivers/gpu/drm/i915/i915_drv.o: warning: objtool: __i915_inject_load_failure.cold.20()+0x0: frame pointer state mismatch
drivers/gpu/drm/i915/i915_drv.o: warning: objtool: i915_driver_load.cold.21()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/i915/i915_irq.o
  LD [M]  drivers/gpu/drm/i2c/ch7006.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/uvd_v5_0.o
  CC [M]  drivers/gpu/drm/i915/i915_memcpy.o
  LD [M]  drivers/gpu/drm/i2c/sil164.o
  CC [M]  drivers/hid/hid-picolcd_leds.o
  LD      drivers/gpu/drm/nouveau/built-in.o
  CC [M]  drivers/hid/hid-picolcd_debugfs.o
  CC [M]  drivers/gpu/drm/nouveau/nvif/object.o
  CC [M]  drivers/gpu/drm/mga/mga_ioc32.o
  LD      drivers/gpu/drm/omapdrm/displays/built-in.o
  LD      drivers/gpu/drm/omapdrm/dss/built-in.o
drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.o: warning: objtool: amdgpu_uvd_sw_init.cold.14()+0x0: frame pointer state mismatch
drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.o: warning: objtool: amdgpu_uvd_ring_test_ib.cold.15()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/nouveau/nvif/client.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/uvd_v6_0.o
  LD      drivers/gpu/drm/omapdrm/built-in.o
drivers/gpu/drm/amd/amdgpu/sdma_v3_0.o: warning: objtool: sdma_v3_0_sw_init.cold.6()+0x0: frame pointer state mismatch
drivers/gpu/drm/amd/amdgpu/sdma_v3_0.o: warning: objtool: sdma_v3_0_ring_test_ib.cold.7()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/amd/amdgpu/amdgpu_vce.o
drivers/gpu/drm/amd/amdgpu/sdma_v2_4.o: warning: objtool: sdma_v2_4_sw_init.cold.4()+0x0: frame pointer state mismatch
drivers/gpu/drm/amd/amdgpu/sdma_v2_4.o: warning: objtool: sdma_v2_4_ring_test_ib.cold.5()+0x0: frame pointer state mismatch
  LD      drivers/gpu/drm/panel/built-in.o
  CC [M]  drivers/gpu/drm/amd/amdgpu/vce_v3_0.o
  LD      drivers/gpu/drm/qxl/built-in.o
  CC [M]  drivers/gpu/drm/qxl/qxl_drv.o
drivers/gpu/drm/mgag200/mgag200_mode.o: warning: objtool: mga_crtc_mode_set.cold.23()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/mgag200/mgag200_cursor.o
  CC [M]  drivers/gpu/drm/qxl/qxl_kms.o
  LD [M]  drivers/gpu/drm/mga/mga.o
  CC [M]  drivers/gpu/drm/qxl/qxl_display.o
drivers/gpu/drm/amd/amdgpu/uvd_v5_0.o: warning: objtool: uvd_v5_0_ring_test_ring.cold.6()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.o
  LD      drivers/gpu/drm/r128/built-in.o
  CC [M]  drivers/gpu/drm/r128/r128_drv.o
  CC [M]  drivers/hid/hid-plantronics.o
  CC [M]  drivers/gpu/drm/r128/r128_cce.o
  CC [M]  drivers/gpu/drm/qxl/qxl_ttm.o
  CC [M]  drivers/gpu/drm/nouveau/nvif/device.o
drivers/gpu/drm/amd/amdgpu/vce_v3_0.o: warning: objtool: vce_v3_0_early_init.cold.8()+0x0: frame pointer state mismatch
  CC [M]  drivers/gpu/drm/r128/r128_state.o
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/qxl/qxl_kms.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/nouveau/nvif/device.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/r128/r128_drv.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/r128/r128_cce.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/r128/r128_state.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/i915/i915_irq.o] Interrupt
make[4]: *** [scripts/Makefile.build:299: drivers/hid/hid-plantronics.o] Interrupt
make[5]: *** [scripts/Makefile.build:544: drivers/gpu/drm/i915] Interrupt
make[5]: *** [scripts/Makefile.build:544: drivers/gpu/drm/nouveau] Interrupt
make[5]: *** [scripts/Makefile.build:544: drivers/gpu/drm/r128] Interrupt
make[3]: *** [scripts/Makefile.build:544: drivers/hid] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/amd/amdgpu/gfx_v8_0.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/amd/amdgpu/uvd_v6_0.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/amd/amdgpu/amdgpu_vce.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.o] Interrupt
make[4]: *** Deleting file 'fs/nfs/modules.order'
make[5]: *** [scripts/Makefile.build:544: drivers/gpu/drm/amd/amdgpu] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/qxl/qxl_ttm.o] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/mgag200/mgag200_cursor.o] Interrupt
make[4]: *** [scripts/Makefile.build:462: fs/nfs/modules.order] Interrupt
make[5]: *** [scripts/Makefile.build:544: drivers/gpu/drm/mgag200] Interrupt
make[6]: *** [scripts/Makefile.build:293: drivers/gpu/drm/qxl/qxl_display.o] Interrupt
make[5]: *** [scripts/Makefile.build:544: drivers/gpu/drm/qxl] Interrupt
make[3]: *** [scripts/Makefile.build:544: fs/nfs] Interrupt
make[4]: *** [scripts/Makefile.build:544: drivers/gpu/drm] Interrupt
make[3]: *** [scripts/Makefile.build:544: drivers/gpu] Interrupt
make[2]: *** [Makefile:990: drivers] Interrupt
make[2]: *** [Makefile:990: fs] Interrupt
make[1]: *** [scripts/package/Makefile:97: bindeb-pkg] Interrupt
make: *** [Makefile:1331: bindeb-pkg] Interrupt
