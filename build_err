  CC      kernel/softirq.o
  AS [M]  arch/x86/crypto/des3_ede-asm_64.o
  CC [M]  arch/x86/crypto/des3_ede_glue.o
  AS [M]  arch/x86/crypto/camellia-x86_64-asm_64.o
  AS      usr/initramfs_data.o
  CC [M]  arch/x86/crypto/camellia_glue.o
  CC      arch/x86/entry/syscall_64.o
  AS [M]  arch/x86/crypto/blowfish-x86_64-asm_64.o
  LD      usr/built-in.o
  CC [M]  arch/x86/crypto/blowfish_glue.o
  CC      mm/filemap.o
  CC      mm/mempool.o
kernel/panic.o: warning: objtool: warn_slowpath_fmt()+0x5f: function has unreachable instruction
  CC      mm/oom_kill.o
  CC      mm/maccess.o
  CC      mm/page_alloc.o
  CC      arch/x86/entry/common.o
  AS [M]  arch/x86/crypto/twofish-x86_64-asm_64.o
  CC [M]  arch/x86/crypto/twofish_glue.o
  AS [M]  arch/x86/crypto/twofish-x86_64-asm_64-3way.o
  CC [M]  arch/x86/crypto/twofish_glue_3way.o
  CC      kernel/resource.o
  LD      init/mounts.o
  LD      init/built-in.o
  CC      kernel/sysctl.o
  AS [M]  arch/x86/crypto/chacha20-ssse3-x86_64.o
  CC [M]  arch/x86/crypto/chacha20_glue.o
  CC      kernel/sysctl_binary.o
  AS [M]  arch/x86/crypto/chacha20-avx2-x86_64.o
  CC      mm/page-writeback.o
  AS [M]  arch/x86/crypto/serpent-sse2-x86_64-asm_64.o
  CC      kernel/capability.o
  CC [M]  arch/x86/crypto/serpent_sse2_glue.o
  AS [M]  arch/x86/crypto/aesni-intel_asm.o
  CC      kernel/ptrace.o
  CC      mm/readahead.o
  CC      mm/swap.o
  CC [M]  arch/x86/crypto/aesni-intel_glue.o
  CC      kernel/user.o
  CC [M]  arch/x86/crypto/fpu.o
  CC      arch/x86/entry/vdso/vma.o
  CC      mm/truncate.o
  CC      kernel/signal.o
  AS [M]  arch/x86/crypto/aesni-intel_avx-x86_64.o
  AS [M]  arch/x86/crypto/aes_ctrby8_avx-x86_64.o
  AS [M]  arch/x86/crypto/ghash-clmulni-intel_asm.o
  CC      mm/vmscan.o
  CC      arch/x86/entry/vdso/vdso32-setup.o
  CC [M]  arch/x86/crypto/ghash-clmulni-intel_glue.o
  CC [M]  arch/x86/crypto/crc32c-intel_glue.o
  CC      kernel/sys.o
  AS [M]  arch/x86/crypto/crc32c-pcl-intel-asm_64.o
  CC      kernel/kmod.o
  LDS     arch/x86/entry/vdso/vdso.lds
  CC      mm/shmem.o
  CC      kernel/workqueue.o
  AS      arch/x86/entry/vdso/vdso-note.o
  AS [M]  arch/x86/crypto/sha1_ssse3_asm.o
  CC      mm/util.o
  CC      kernel/pid.o
  CC      arch/x86/entry/vdso/vclock_gettime.o
  CC [M]  arch/x86/crypto/sha1_ssse3_glue.o
  CC      mm/mmzone.o
  AS [M]  arch/x86/crypto/sha1_avx2_x86_64_asm.o
  CC      mm/vmstat.o
  CC      arch/x86/entry/vdso/vgetcpu.o
  CC      mm/backing-dev.o
  HOSTCC  arch/x86/entry/vdso/vdso2c
  CC      mm/mm_init.o
  LDS     arch/x86/entry/vdso/vdsox32.lds
  X32     arch/x86/entry/vdso/vdso-note-x32.o
  CC      kernel/task_work.o
  CC      kernel/extable.o
  AS [M]  arch/x86/crypto/sha1_ni_asm.o
  X32     arch/x86/entry/vdso/vclock_gettime-x32.o
  X32     arch/x86/entry/vdso/vgetcpu-x32.o
  CC      mm/mmu_context.o
  CC      kernel/params.o
  LDS     arch/x86/entry/vdso/vdso32/vdso32.lds
  AS [M]  arch/x86/crypto/crc32-pclmul_asm.o
  CC      mm/percpu.o
  CC      arch/x86/entry/vdso/vdso32/vclock_gettime.o
  CC      kernel/kthread.o
  CC [M]  arch/x86/crypto/crc32-pclmul_glue.o
  AS [M]  arch/x86/crypto/sha256-ssse3-asm.o
  AS [M]  arch/x86/crypto/sha256-avx-asm.o
kernel/workqueue.c: In function ‘create_worker’:
kernel/workqueue.c:1772:40: warning: ‘%d’ directive output may be truncated writing between 1 and 10 bytes into a region of size between 5 and 14 [-Wformat-truncation=]
   snprintf(id_buf, sizeof(id_buf), "%d:%d%s", pool->cpu, id,
                                        ^~
kernel/workqueue.c:1772:36: note: directive argument in the range [0, 2147483647]
   snprintf(id_buf, sizeof(id_buf), "%d:%d%s", pool->cpu, id,
                                    ^~~~~~~~~
kernel/workqueue.c:1772:3: note: ‘snprintf’ output between 4 and 23 bytes into a destination of size 16
   snprintf(id_buf, sizeof(id_buf), "%d:%d%s", pool->cpu, id,
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     pool->attrs->nice < 0  ? "H" : "");
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  CC      kernel/sys_ni.o
  CC      kernel/nsproxy.o
  CC      mm/slab_common.o
  AS [M]  arch/x86/crypto/sha256-avx2-asm.o
  CC      kernel/notifier.o
  AS      arch/x86/entry/vdso/vdso32/note.o
  CC      mm/compaction.o
  CC [M]  arch/x86/crypto/sha256_ssse3_glue.o
  AS [M]  arch/x86/crypto/sha256_ni_asm.o
  AS      arch/x86/entry/vdso/vdso32/system_call.o
  CC      mm/vmacache.o
  AS      arch/x86/entry/vdso/vdso32/sigreturn.o
  AS [M]  arch/x86/crypto/sha512-ssse3-asm.o
  CC      mm/interval_tree.o
  AS [M]  arch/x86/crypto/sha512-avx-asm.o
  CC      mm/list_lru.o
  AS [M]  arch/x86/crypto/sha512-avx2-asm.o
  CC      kernel/ksysfs.o
  CC      mm/workingset.o
  CC      kernel/cred.o
  CC      kernel/reboot.o
  CC [M]  arch/x86/crypto/sha512_ssse3_glue.o
  CC      mm/debug.o
  CC      kernel/async.o
  CC      kernel/range.o
  AS [M]  arch/x86/crypto/crct10dif-pcl-asm_64.o
  CC      mm/gup.o
  CC [M]  arch/x86/crypto/crct10dif-pclmul_glue.o
  CC      mm/highmem.o
  VDSO    arch/x86/entry/vdso/vdso64.so.dbg
  CC      mm/memory.o
  CC      kernel/smpboot.o
  CC      mm/mincore.o
  AS [M]  arch/x86/crypto/poly1305-sse2-x86_64.o
  CC [M]  arch/x86/crypto/poly1305_glue.o
  CC      kernel/ucount.o
  CC      mm/mlock.o
  CC      mm/mmap.o
  CC      kernel/groups.o
kernel/reboot.o: warning: objtool: SYSC_reboot()+0x180: function has unreachable instruction
  CC      kernel/bpf/core.o
  AS [M]  arch/x86/crypto/poly1305-avx2-x86_64.o
  AS [M]  arch/x86/crypto/camellia-aesni-avx-asm_64.o
  CC      kernel/bpf/syscall.o
  CC      mm/mprotect.o
  VDSO    arch/x86/entry/vdso/vdsox32.so.dbg
  CC      mm/mremap.o
  CC [M]  arch/x86/crypto/camellia_aesni_avx_glue.o
  AS [M]  arch/x86/crypto/cast5-avx-x86_64-asm_64.o
  CC [M]  arch/x86/crypto/cast5_avx_glue.o
  CC      kernel/events/core.o
  CC      mm/msync.o
  AS [M]  arch/x86/crypto/cast6-avx-x86_64-asm_64.o
  CC      kernel/irq/irqdesc.o
  CC      mm/rmap.o
  CC      kernel/irq/handle.o
  VDSO    arch/x86/entry/vdso/vdso32.so.dbg
  CC [M]  arch/x86/crypto/cast6_avx_glue.o
  OBJCOPY arch/x86/entry/vdso/vdso64.so
  OBJCOPY arch/x86/entry/vdso/vdsox32.so
  CC      mm/vmalloc.o
  CC      kernel/livepatch/core.o
  OBJCOPY arch/x86/entry/vdso/vdso32.so
  VDSO2C  arch/x86/entry/vdso/vdso-image-64.c
  VDSO2C  arch/x86/entry/vdso/vdso-image-x32.c
  VDSO2C  arch/x86/entry/vdso/vdso-image-32.c
  CC      arch/x86/entry/vdso/vdso-image-64.o
  CC      arch/x86/entry/vdso/vdso-image-x32.o
  CC      kernel/irq/manage.o
  AS [M]  arch/x86/crypto/twofish-avx-x86_64-asm_64.o
  CC      kernel/bpf/verifier.o
  CC      kernel/irq/spurious.o
  CC      kernel/irq/resend.o
  CC      arch/x86/entry/vdso/vdso-image-32.o
  CC [M]  arch/x86/crypto/twofish_avx_glue.o
  AS [M]  arch/x86/crypto/serpent-avx-x86_64-asm_64.o
  CC [M]  arch/x86/crypto/serpent_avx_glue.o
  CC      kernel/bpf/inode.o
  CC      mm/pagewalk.o
  AS [M]  arch/x86/crypto/camellia-aesni-avx2-asm_64.o
  LD      arch/x86/entry/vdso/built-in.o
  CC      arch/x86/entry/vsyscall/vsyscall_gtod.o
  CC      arch/x86/entry/vsyscall/vsyscall_64.o
  AS      arch/x86/entry/vsyscall/vsyscall_emu_64.o
  LD      kernel/livepatch/livepatch.o
  LD      kernel/livepatch/built-in.o
  CC      mm/pgtable-generic.o
  CC      mm/process_vm_access.o
  CC      kernel/locking/mutex.o
  CC      kernel/bpf/helpers.o
  CC      mm/init-mm.o
  CC      kernel/bpf/hashtab.o
  CC      kernel/irq/chip.o
  CC      kernel/irq/dummychip.o
  CC      mm/nobootmem.o
  LD      arch/x86/entry/vsyscall/built-in.o
  AS      arch/x86/entry/entry_64_compat.o
  CC [M]  arch/x86/crypto/camellia_aesni_avx2_glue.o
  CC      mm/fadvise.o
  AS [M]  arch/x86/crypto/serpent-avx2-asm_64.o
  CC [M]  arch/x86/crypto/serpent_avx2_glue.o
  CC      kernel/bpf/arraymap.o
  CC      mm/madvise.o
  LD [M]  arch/x86/crypto/aes-x86_64.o
  CC      mm/memblock.o
  CC      kernel/irq/devres.o
  CC      mm/page_io.o
  CC      arch/x86/entry/syscall_32.o
  CC      mm/swap_state.o
  CC      kernel/bpf/percpu_freelist.o
  LD [M]  arch/x86/crypto/des3_ede-x86_64.o
  CC      mm/swapfile.o
  LD [M]  arch/x86/crypto/camellia-x86_64.o
  CC      kernel/locking/semaphore.o
  LD [M]  arch/x86/crypto/blowfish-x86_64.o
  CC      mm/frontswap.o
  CC      kernel/bpf/stackmap.o
  CC      kernel/irq/generic-chip.o
  CC      mm/zswap.o
  LD      arch/x86/entry/built-in.o
  CC      mm/dmapool.o
  CC      arch/x86/events/core.o
  LD [M]  arch/x86/crypto/twofish-x86_64.o
  CC      mm/hugetlb.o
  LD [M]  arch/x86/crypto/twofish-x86_64-3way.o
  LD [M]  arch/x86/crypto/chacha20-x86_64.o
  CC      mm/mempolicy.o
  CC      kernel/irq/autoprobe.o
  LD [M]  arch/x86/crypto/serpent-sse2-x86_64.o
  CC      mm/sparse.o
  LD [M]  arch/x86/crypto/aesni-intel.o
  LD [M]  arch/x86/crypto/ghash-clmulni-intel.o
  LD [M]  arch/x86/crypto/crc32c-intel.o
  CC      mm/sparse-vmemmap.o
  LD [M]  arch/x86/crypto/sha1-ssse3.o
  LD [M]  arch/x86/crypto/crc32-pclmul.o
  LD [M]  arch/x86/crypto/sha256-ssse3.o
  LD [M]  arch/x86/crypto/sha512-ssse3.o
  LD [M]  arch/x86/crypto/crct10dif-pclmul.o
  CC      kernel/locking/rwsem.o
  LD [M]  arch/x86/crypto/poly1305-x86_64.o
  CC      kernel/irq/irqdomain.o
  LD [M]  arch/x86/crypto/camellia-aesni-avx-x86_64.o
  CC      kernel/irq/proc.o
  LD [M]  arch/x86/crypto/cast5-avx-x86_64.o
  LD      kernel/bpf/built-in.o
  LD [M]  arch/x86/crypto/cast6-avx-x86_64.o
  CC      kernel/power/qos.o
  CC      kernel/events/ring_buffer.o
  LD [M]  arch/x86/crypto/twofish-avx-x86_64.o
  LD [M]  arch/x86/crypto/serpent-avx-x86_64.o
  LD [M]  arch/x86/crypto/camellia-aesni-avx2.o
  LD [M]  arch/x86/crypto/serpent-avx2.o
  CC      mm/mmu_notifier.o
  CC      arch/x86/ia32/sys_ia32.o
  CC      mm/ksm.o
  CC      kernel/irq/migration.o
  CC      mm/page_poison.o
  CC      kernel/locking/percpu-rwsem.o
  CC      mm/slab.o
  CC      mm/memory_hotplug.o
  CC      kernel/irq/pm.o
  CC      arch/x86/ia32/ia32_signal.o
  CC      kernel/irq/msi.o
  CC      mm/memtest.o
  CC      arch/x86/events/amd/core.o
  CC      kernel/events/callchain.o
  CC      mm/migrate.o
  CC      kernel/irq/affinity.o
  CC      mm/huge_memory.o
  CC      kernel/power/main.o
  CC      kernel/locking/spinlock.o
  CC      arch/x86/ia32/ia32_aout.o
  CC      mm/khugepaged.o
  CC      mm/page_counter.o
  CC      mm/memcontrol.o
  CC      mm/vmpressure.o
  CC      kernel/events/hw_breakpoint.o
  CC      mm/swap_cgroup.o
  CC      mm/memory-failure.o
  LD      kernel/irq/built-in.o
  CC      mm/page_isolation.o
  CC      kernel/printk/printk.o
  CC      kernel/locking/osq_lock.o
  CC      arch/x86/events/amd/uncore.o
  CC      arch/x86/ia32/audit.o
  CC      kernel/printk/nmi.o
  CC      kernel/power/console.o
kernel/printk/printk.c: In function ‘control_devkmsg’:
kernel/printk/printk.c:133:3: warning: ‘strncpy’ output truncated before terminating nul copying 2 bytes from a string of the same length [-Wstringop-truncation]
   strncpy(devkmsg_log_str, "on", 2);
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kernel/printk/printk.c:136:3: warning: ‘strncpy’ output truncated before terminating nul copying 3 bytes from a string of the same length [-Wstringop-truncation]
   strncpy(devkmsg_log_str, "off", 3);
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  CC      kernel/printk/braille.o
  LD      arch/x86/ia32/built-in.o
  CC      arch/x86/kernel/process_64.o
  LD      arch/x86/kvm/built-in.o
  CC      kernel/locking/qspinlock.o
  LD      kernel/events/built-in.o
  CC [M]  arch/x86/kvm/../../../virt/kvm/kvm_main.o
  CC [M]  arch/x86/kvm/../../../virt/kvm/coalesced_mmio.o
  CC      arch/x86/kernel/signal.o
  CC      arch/x86/kernel/signal_compat.o
  CC      mm/zpool.o
  CC      arch/x86/events/amd/ibs.o
  CC      kernel/power/process.o
  CC      mm/zbud.o
  CC      mm/early_ioremap.o
  CC      arch/x86/kernel/traps.o
  CC      kernel/locking/rtmutex.o
  CC      arch/x86/kernel/irq.o
  LD      kernel/printk/built-in.o
  CC      mm/balloon_compaction.o
  CC      kernel/rcu/update.o
  CC [M]  arch/x86/kvm/../../../virt/kvm/eventfd.o
  CC      kernel/rcu/sync.o
  CC      mm/page_ext.o
kernel/power/process.o: warning: objtool: freeze_processes()+0x5c: function has unreachable instruction
  CC      kernel/rcu/srcu.o
  CC      arch/x86/kernel/irq_64.o
  CC      kernel/power/suspend.o
  CC      arch/x86/events/msr.o
  CC      kernel/rcu/tree.o
  CC      mm/userfaultfd.o
  CC      arch/x86/kernel/dumpstack_64.o
  CC      mm/frame_vector.o
  CC      arch/x86/events/amd/iommu.o
  CC      mm/usercopy.o
  CC      kernel/locking/rwsem-xadd.o
  CC [M]  mm/hwpoison-inject.o
  CC      arch/x86/kernel/time.o
  CC [M]  mm/zsmalloc.o
  AS      arch/x86/net/bpf_jit.o
  CC      arch/x86/mm/init.o
  CC      arch/x86/net/bpf_jit_comp.o
  CC      arch/x86/kernel/ioport.o
  CC      kernel/power/hibernate.o
  CC      arch/x86/kernel/dumpstack.o
  CC      arch/x86/mm/init_64.o
  CC      arch/x86/events/intel/core.o
  CC      arch/x86/mm/fault.o
  CC      arch/x86/events/intel/bts.o
  CC      arch/x86/mm/ioremap.o
  CC      arch/x86/mm/extable.o
  CC      kernel/locking/qrwlock.o
  CC      arch/x86/kernel/nmi.o
  CC [M]  arch/x86/kvm/../../../virt/kvm/irqchip.o
  CC      arch/x86/mm/pageattr.o
arch/x86/net/bpf_jit_comp.o: warning: objtool: do_jit()+0x19f: function has unreachable instruction
  LD      arch/x86/net/built-in.o
  CC      arch/x86/platform/atom/pmc_atom.o
  LD      arch/x86/platform/ce4100/built-in.o
  CC      arch/x86/platform/efi/quirks.o
  CC      arch/x86/platform/efi/efi.o
  LD      arch/x86/platform/geode/built-in.o
  CC [M]  arch/x86/kvm/../../../virt/kvm/vfio.o
  CC      arch/x86/mm/mmap.o
  CC      arch/x86/platform/efi/efi_64.o
  LD      mm/built-in.o
  AS      arch/x86/platform/efi/efi_stub_64.o
  LD      kernel/locking/built-in.o
  CC      arch/x86/platform/efi/efi-bgrt.o
  CC      kernel/power/snapshot.o
  LD      kernel/rcu/built-in.o
  CC      arch/x86/platform/efi/early_printk.o
  CC      kernel/sched/core.o
  AS      arch/x86/platform/efi/efi_thunk_64.o
  CC      arch/x86/mm/pat.o
  CC      arch/x86/mm/pgtable.o
  CC      arch/x86/mm/physaddr.o
  CC [M]  arch/x86/kvm/../../../virt/kvm/async_pf.o
  CC      arch/x86/events/intel/cqm.o
  CC      arch/x86/events/intel/ds.o
  LD      arch/x86/platform/atom/built-in.o
  LD      arch/x86/platform/goldfish/built-in.o
  CC      arch/x86/events/intel/knc.o
  CC      arch/x86/platform/intel/iosf_mbi.o
  CC      arch/x86/kernel/ldt.o
  LD      arch/x86/platform/intel-mid/built-in.o
  CC      arch/x86/mm/gup.o
  CC      arch/x86/mm/setup_nx.o
  LD      arch/x86/platform/intel-quark/built-in.o
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:2366:24: error: initializer element is not constant
 __setup("schedstats=", setup_schedstats);
                        ^~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:2366:1: note: in expansion of macro ‘__setup’
 __setup("schedstats=", setup_schedstats);
 ^~~~~~~
kernel/sched/core.c:2366:24: note: (near initialization for ‘__setup_setup_schedstats.setup_func’)
 __setup("schedstats=", setup_schedstats);
                        ^~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:2366:1: note: in expansion of macro ‘__setup’
 __setup("schedstats=", setup_schedstats);
 ^~~~~~~
kernel/sched/core.c: In function ‘wake_up_new_task’:
kernel/sched/core.c:2604:7: error: dereferencing pointer to incomplete type ‘struct sched_plugin’
   fsac->task_new(p,1,0);
       ^~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:2648:19: error: non-static declaration of ‘preempt_notifier_inc’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_inc);
                   ^~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2648:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_inc);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2644:6: note: previous definition of ‘preempt_notifier_inc’ was here
 void preempt_notifier_inc(void)
      ^~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2654:19: error: non-static declaration of ‘preempt_notifier_dec’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_dec);
                   ^~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2654:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_dec);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2650:6: note: previous definition of ‘preempt_notifier_dec’ was here
 void preempt_notifier_dec(void)
      ^~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2667:19: error: non-static declaration of ‘preempt_notifier_register’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_register);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2667:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_register);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2660:6: note: previous definition of ‘preempt_notifier_register’ was here
 void preempt_notifier_register(struct preempt_notifier *notifier)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2679:19: error: non-static declaration of ‘preempt_notifier_unregister’ follows static declaration
 EXPORT_SYMBOL_GPL(preempt_notifier_unregister);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2679:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(preempt_notifier_unregister);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2675:6: note: previous definition of ‘preempt_notifier_unregister’ was here
 void preempt_notifier_unregister(struct preempt_notifier *notifier)
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:2984:15: error: non-static declaration of ‘single_task_running’ follows static declaration
 EXPORT_SYMBOL(single_task_running);
               ^~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:2984:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(single_task_running);
 ^~~~~~~~~~~~~
kernel/sched/core.c:2980:6: note: previous definition of ‘single_task_running’ was here
 bool single_task_running(void)
      ^~~~~~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3050:36: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct kernel_stat, kstat);
                                    ^~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3050:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_stat, kstat);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:3051:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
                                       ^~~~~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3051:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
 ^~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3053:23: error: extern declaration of ‘kstat’ follows declaration with no linkage
 EXPORT_PER_CPU_SYMBOL(kstat);
                       ^~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
./include/linux/percpu-defs.h:181:36: note: in expansion of macro ‘EXPORT_SYMBOL’
 #define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(var)
                                    ^~~~~~~~~~~~~
kernel/sched/core.c:3053:1: note: in expansion of macro ‘EXPORT_PER_CPU_SYMBOL’
 EXPORT_PER_CPU_SYMBOL(kstat);
 ^~~~~~~~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3050:36: note: previous declaration of ‘kstat’ was here
 DEFINE_PER_CPU(struct kernel_stat, kstat);
                                    ^~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3050:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_stat, kstat);
 ^~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3054:23: error: extern declaration of ‘kernel_cpustat’ follows declaration with no linkage
 EXPORT_PER_CPU_SYMBOL(kernel_cpustat);
                       ^~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
./include/linux/percpu-defs.h:181:36: note: in expansion of macro ‘EXPORT_SYMBOL’
 #define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(var)
                                    ^~~~~~~~~~~~~
kernel/sched/core.c:3054:1: note: in expansion of macro ‘EXPORT_PER_CPU_SYMBOL’
 EXPORT_PER_CPU_SYMBOL(kernel_cpustat);
 ^~~~~~~~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3051:39: note: previous declaration of ‘kernel_cpustat’ was here
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
                                       ^~~~~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:3051:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
 ^~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3518:15: error: non-static declaration of ‘schedule’ follows static declaration
 EXPORT_SYMBOL(schedule);
               ^~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:3518:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(schedule);
 ^~~~~~~~~~~~~
kernel/sched/core.c:3507:35: note: previous definition of ‘schedule’ was here
 asmlinkage __visible void __sched schedule(void)
                                   ^~~~~~~~
  CC      arch/x86/mm/tlb.o
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3685:15: error: non-static declaration of ‘default_wake_function’ follows static declaration
 EXPORT_SYMBOL(default_wake_function);
               ^~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:3685:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(default_wake_function);
 ^~~~~~~~~~~~~
kernel/sched/core.c:3680:5: note: previous definition of ‘default_wake_function’ was here
 int default_wake_function(wait_queue_t *curr, unsigned mode, int wake_flags,
     ^~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:3843:15: error: non-static declaration of ‘set_user_nice’ follows static declaration
 EXPORT_SYMBOL(set_user_nice);
               ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:3843:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(set_user_nice);
 ^~~~~~~~~~~~~
kernel/sched/core.c:3792:6: note: previous definition of ‘set_user_nice’ was here
 void set_user_nice(struct task_struct *p, long nice)
      ^~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__nice’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__nice’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__nice’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__nice’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_nice’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_nice’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_nice’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_nice’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_nice’; did you mean ‘SyS_nice’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_nice’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
  LD      arch/x86/platform/iris/built-in.o
  CC      arch/x86/mm/pat_rbtree.o
kernel/sched/core.c: In function ‘__sched_setscheduler’:
kernel/sched/core.c:4392:3: error: too few arguments to function ‘fsac_dealloc’
   fsac_dealloc();
   ^~~~~~~~~~~~
In file included from kernel/sched/core.c:91:
./include/fsac/fsac.h:54:6: note: declared here
 void fsac_dealloc(struct task_struct *tsk);
      ^~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c: In function ‘__dl_clear_params’:
kernel/sched/core.c:4431:19: error: non-static declaration of ‘sched_setscheduler’ follows static declaration
 EXPORT_SYMBOL_GPL(sched_setscheduler);
                   ^~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4431:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(sched_setscheduler);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:4426:5: note: previous definition of ‘sched_setscheduler’ was here
 int sched_setscheduler(struct task_struct *p, int policy,
     ^~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:4437:19: error: non-static declaration of ‘sched_setattr’ follows static declaration
 EXPORT_SYMBOL_GPL(sched_setattr);
                   ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4437:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(sched_setattr);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:4433:5: note: previous definition of ‘sched_setattr’ was here
 int sched_setattr(struct task_struct *p, const struct sched_attr *attr)
     ^~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:4457:19: error: non-static declaration of ‘sched_setscheduler_nocheck’ follows static declaration
 EXPORT_SYMBOL_GPL(sched_setscheduler_nocheck);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4457:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(sched_setscheduler_nocheck);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:4452:5: note: previous definition of ‘sched_setscheduler_nocheck’ was here
 int sched_setscheduler_nocheck(struct task_struct *p, int policy,
     ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setscheduler’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setscheduler’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setscheduler’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setscheduler’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setscheduler’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setscheduler’; did you mean ‘SyS_sched_setscheduler’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setparam’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setparam’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setparam’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setparam’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setparam’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setparam’; did you mean ‘SyS_sched_setparam’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setattr’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setattr’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setattr’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setattr’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setattr’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setattr’; did you mean ‘SyS_sched_setattr’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getscheduler’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getscheduler’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getscheduler’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
  CC      arch/x86/events/intel/lbr.o
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getscheduler’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getscheduler’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
  LD      arch/x86/platform/mellanox/built-in.o
kernel/sched/core.c: In function ‘SyS_sched_getscheduler’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getscheduler’; did you mean ‘SYSC_sched_setscheduler’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getscheduler’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getparam’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getparam’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getparam’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getparam’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
  LD      arch/x86/platform/efi/built-in.o
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getparam’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_getparam’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getparam’; did you mean ‘SYSC_sched_setparam’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getparam’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getattr’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
  CC      kernel/power/swap.o
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getattr’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getattr’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getattr’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getattr’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_getattr’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getattr’; did you mean ‘SYSC_sched_setattr’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getattr’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_setaffinity’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_setaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_setaffinity’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_setaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_setaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_setaffinity’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_setaffinity’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_setaffinity’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_setaffinity’; did you mean ‘SyS_sched_setaffinity’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_setaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_getaffinity’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_getaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_getaffinity’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_getaffinity’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_getaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_getaffinity’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_getaffinity’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_getaffinity’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_getaffinity’; did you mean ‘SYSC_sched_setaffinity’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_getaffinity’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_yield’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4968:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_yield’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4968:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4968:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_yield’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4968:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_yield’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4968:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:179:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(_##sname, 0);    \
  ^~~~~~~~~~~~~~~~
kernel/sched/core.c:4968:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:180:13: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  asmlinkage long sys_##sname(void)
             ^~~~
kernel/sched/core.c:4968:1: note: in expansion of macro ‘SYSCALL_DEFINE0’
 SYSCALL_DEFINE0(sched_yield)
 ^~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:4998:15: error: non-static declaration of ‘_cond_resched’ follows static declaration
 EXPORT_SYMBOL(_cond_resched);
               ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:4998:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(_cond_resched);
 ^~~~~~~~~~~~~
kernel/sched/core.c:4990:13: note: previous definition of ‘_cond_resched’ was here
 int __sched _cond_resched(void)
             ^~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5027:15: error: non-static declaration of ‘__cond_resched_lock’ follows static declaration
 EXPORT_SYMBOL(__cond_resched_lock);
               ^~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5027:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(__cond_resched_lock);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5009:5: note: previous definition of ‘__cond_resched_lock’ was here
 int __cond_resched_lock(spinlock_t *lock)
     ^~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5041:15: error: non-static declaration of ‘__cond_resched_softirq’ follows static declaration
 EXPORT_SYMBOL(__cond_resched_softirq);
               ^~~~~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5041:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(__cond_resched_softirq);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5029:13: note: previous definition of ‘__cond_resched_softirq’ was here
 int __sched __cond_resched_softirq(void)
             ^~~~~~~~~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5070:15: error: non-static declaration of ‘yield’ follows static declaration
 EXPORT_SYMBOL(yield);
               ^~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5070:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(yield);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5065:14: note: previous definition of ‘yield’ was here
 void __sched yield(void)
              ^~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5144:19: error: non-static declaration of ‘yield_to’ follows static declaration
 EXPORT_SYMBOL_GPL(yield_to);
                   ^~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5144:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(yield_to);
 ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:5087:13: note: previous definition of ‘yield_to’ was here
 int __sched yield_to(struct task_struct *p, bool preempt)
             ^~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5169:15: error: non-static declaration of ‘io_schedule_timeout’ follows static declaration
 EXPORT_SYMBOL(io_schedule_timeout);
               ^~~~~~~~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:5169:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(io_schedule_timeout);
 ^~~~~~~~~~~~~
kernel/sched/core.c:5150:14: note: previous definition of ‘io_schedule_timeout’ was here
 long __sched io_schedule_timeout(long timeout)
              ^~~~~~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_get_priority_max’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_max’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_get_priority_max’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_max’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_get_priority_max’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_get_priority_max’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_get_priority_max’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘SyS_sched_get_priority_max’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_get_priority_max’; did you mean ‘SyS_sched_get_priority_max’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_get_priority_max’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_get_priority_min’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_min’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_get_priority_min’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_get_priority_min’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_get_priority_min’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_get_priority_min’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_get_priority_min’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
  LD      arch/x86/platform/olpc/built-in.o
kernel/sched/core.c: In function ‘SyS_sched_get_priority_min’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_get_priority_min’; did you mean ‘SyS_sched_get_priority_min’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_get_priority_min’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: error: redeclaration of ‘__syscall_meta__sched_rr_get_interval’ with no linkage
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:120:33: note: previous declaration of ‘__syscall_meta__sched_rr_get_interval’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:158:2: note: in expansion of macro ‘SYSCALL_TRACE_ENTER_EVENT’
  SYSCALL_TRACE_ENTER_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __syscall_meta_##sname;  \
  ^~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:161:4: error: redeclaration of ‘__syscall_meta__sched_rr_get_interval’ with no linkage
    __syscall_meta_##sname = {    \
    ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:136:33: note: previous declaration of ‘__syscall_meta__sched_rr_get_interval’ was here
  static struct syscall_metadata __syscall_meta_##sname;  \
                                 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:159:2: note: in expansion of macro ‘SYSCALL_TRACE_EXIT_EVENT’
  SYSCALL_TRACE_EXIT_EVENT(sname);   \
  ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:160:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
  static struct syscall_metadata __used   \
  ^~~~~~
./include/linux/syscalls.h:190:2: note: in expansion of macro ‘SYSCALL_METADATA’
  SYSCALL_METADATA(sname, x, __VA_ARGS__)   \
  ^~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:197:21: error: invalid storage class for function ‘SYSC_sched_rr_get_interval’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__)); \
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: error: static declaration of ‘SyS_sched_rr_get_interval’ follows non-static declaration
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:198:18: note: previous declaration of ‘SyS_sched_rr_get_interval’ was here
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)); \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
  LD      arch/x86/platform/scx200/built-in.o
kernel/sched/core.c: In function ‘SyS_sched_rr_get_interval’:
./include/linux/syscalls.h:201:14: error: implicit declaration of function ‘SYSC_sched_rr_get_interval’; did you mean ‘SyS_sched_rr_get_interval’? [-Werror=implicit-function-declaration]
   long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__)); \
              ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c: In function ‘__dl_clear_params’:
./include/linux/syscalls.h:206:21: error: invalid storage class for function ‘SYSC_sched_rr_get_interval’
  static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))
                     ^~~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:5586:19: error: initializer element is not constant
  .put_prev_task = put_prev_task_fake,
                   ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5586:19: note: (near initialization for ‘fake_sched_class.put_prev_task’)
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:5735:28: error: initializer element is not constant
 early_param("sched_debug", sched_debug_setup);
                            ^~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:5735:1: note: in expansion of macro ‘early_param’
 early_param("sched_debug", sched_debug_setup);
 ^~~~~~~~~~~
kernel/sched/core.c:5735:28: note: (near initialization for ‘__setup_sched_debug_setup.setup_func’)
 early_param("sched_debug", sched_debug_setup);
                            ^~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:5735:1: note: in expansion of macro ‘early_param’
 early_param("sched_debug", sched_debug_setup);
 ^~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:6078:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain *, sd_llc);
                                       ^~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6078:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain *, sd_llc);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6079:21: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(int, sd_llc_size);
                     ^~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6079:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(int, sd_llc_size);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6080:21: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(int, sd_llc_id);
                     ^~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6080:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(int, sd_llc_id);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6081:46: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain_shared *, sd_llc_shared);
                                              ^~~~~~~~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6081:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain_shared *, sd_llc_shared);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6082:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain *, sd_numa);
                                       ^~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6082:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain *, sd_numa);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:6083:39: error: section attribute cannot be specified for local variables
 DEFINE_PER_CPU(struct sched_domain *, sd_asym);
                                       ^~~~~~~
./include/linux/percpu-defs.h:105:19: note: in definition of macro ‘DEFINE_PER_CPU_SECTION’
  __typeof__(type) name
                   ^~~~
kernel/sched/core.c:6083:1: note: in expansion of macro ‘DEFINE_PER_CPU’
 DEFINE_PER_CPU(struct sched_domain *, sd_asym);
 ^~~~~~~~~~~~~~
  CC      arch/x86/platform/sfi/sfi.o
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:6174:22: error: initializer element is not constant
 __setup("isolcpus=", isolated_cpu_setup);
                      ^~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6174:1: note: in expansion of macro ‘__setup’
 __setup("isolcpus=", isolated_cpu_setup);
 ^~~~~~~
kernel/sched/core.c:6174:22: note: (near initialization for ‘__setup_isolated_cpu_setup.setup_func’)
 __setup("isolcpus=", isolated_cpu_setup);
                      ^~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6174:1: note: in expansion of macro ‘__setup’
 __setup("isolcpus=", isolated_cpu_setup);
 ^~~~~~~
kernel/sched/core.c:6416:32: error: initializer element is not constant
 __setup("relax_domain_level=", setup_relax_domain_level);
                                ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6416:1: note: in expansion of macro ‘__setup’
 __setup("relax_domain_level=", setup_relax_domain_level);
 ^~~~~~~
kernel/sched/core.c:6416:32: note: (near initialization for ‘__setup_setup_relax_domain_level.setup_func’)
 __setup("relax_domain_level=", setup_relax_domain_level);
                                ^~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/init.h:226:32: note: in definition of macro ‘__setup_param’
   = { __setup_str_##unique_id, fn, early }
                                ^~
kernel/sched/core.c:6416:1: note: in expansion of macro ‘__setup’
 __setup("relax_domain_level=", setup_relax_domain_level);
 ^~~~~~~
kernel/sched/core.c:6946:5: error: static declaration of ‘__sdt_alloc’ follows non-static declaration
 int __sdt_alloc(const struct cpumask *cpu_map)
     ^~~~~~~~~~~
kernel/sched/core.c:6440:5: note: previous declaration of ‘__sdt_alloc’ was here
 int __sdt_alloc(const struct cpumask *cpu_map);
     ^~~~~~~~~~~
kernel/sched/core.c:7011:6: error: static declaration of ‘__sdt_free’ follows non-static declaration
 void __sdt_free(const struct cpumask *cpu_map)
      ^~~~~~~~~~
kernel/sched/core.c:6439:6: note: previous declaration of ‘__sdt_free’ was here
 void __sdt_free(const struct cpumask *cpu_map);
      ^~~~~~~~~~
  CC      arch/x86/kernel/setup.o
  CC [M]  arch/x86/kvm/x86.o
In file included from ./include/linux/printk.h:5,
                 from ./include/linux/kernel.h:13,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7568:16: error: initializer element is not constant
 early_initcall(migration_init);
                ^~~~~~~~~~~~~~
./include/linux/init.h:161:58: note: in definition of macro ‘__define_initcall’
  __attribute__((__section__(".initcall" #id ".init"))) = fn;
                                                          ^~
kernel/sched/core.c:7568:1: note: in expansion of macro ‘early_initcall’
 early_initcall(migration_init);
 ^~~~~~~~~~~~~~
kernel/sched/core.c:7577:1: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 int in_sched_functions(unsigned long addr)
 ^~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7596:32: error: section attribute cannot be specified for local variables
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
                                ^~~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7596:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:7597:32: error: section attribute cannot be specified for local variables
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
                                ^~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7597:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
 ^~~~~~~~~~~~~~~
In file included from ./include/linux/linkage.h:6,
                 from ./include/linux/kernel.h:6,
                 from ./include/linux/sched.h:18,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7610:15: error: non-static declaration of ‘bit_waitqueue’ follows static declaration
 EXPORT_SYMBOL(bit_waitqueue);
               ^~~~~~~~~~~~~
./include/linux/export.h:58:21: note: in definition of macro ‘___EXPORT_SYMBOL’
  extern typeof(sym) sym;      \
                     ^~~
kernel/sched/core.c:7610:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(bit_waitqueue);
 ^~~~~~~~~~~~~
kernel/sched/core.c:7603:20: note: previous definition of ‘bit_waitqueue’ was here
 wait_queue_head_t *bit_waitqueue(void *word, int bit)
                    ^~~~~~~~~~~~~
kernel/sched/core.c:8774:5: error: static declaration of ‘__cfs_schedulable’ follows non-static declaration
 int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)
     ^~~~~~~~~~~~~~~~~
  LD      arch/x86/platform/ts5500/built-in.o
kernel/sched/core.c:8572:5: note: previous declaration of ‘__cfs_schedulable’ was here
 int __cfs_schedulable(struct task_group *tg, u64 period, u64 runtime);
     ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:8839:15: error: initializer element is not constant
   .read_u64 = cpu_shares_read_u64,
               ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8839:15: note: (near initialization for ‘cpu_files[0].read_u64’)
kernel/sched/core.c:8840:16: error: initializer element is not constant
   .write_u64 = cpu_shares_write_u64,
                ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8840:16: note: (near initialization for ‘cpu_files[0].write_u64’)
kernel/sched/core.c:8846:15: error: initializer element is not constant
   .read_s64 = cpu_cfs_quota_read_s64,
               ^~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8846:15: note: (near initialization for ‘cpu_files[1].read_s64’)
kernel/sched/core.c:8847:16: error: initializer element is not constant
   .write_u64 = cpu_cfs_period_write_u64,
                ^~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8847:16: note: (near initialization for ‘cpu_files[1].write_u64’)
kernel/sched/core.c:8851:15: error: initializer element is not constant
   .seq_show = cpu_stats_show,
               ^~~~~~~~~~~~~~
kernel/sched/core.c:8851:15: note: (near initialization for ‘cpu_files[2].seq_show’)
kernel/sched/core.c:8927:1: error: expected declaration or statement at end of input
 };
 ^
kernel/sched/core.c:8918:11: warning: unused variable ‘sched_prio_to_wmult’ [-Wunused-variable]
 const u32 sched_prio_to_wmult[40] = {
           ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8900:11: warning: unused variable ‘sched_prio_to_weight’ [-Wunused-variable]
 const int sched_prio_to_weight[40] = {
           ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8869:22: warning: unused variable ‘cpu_cgrp_subsys’ [-Wunused-variable]
 struct cgroup_subsys cpu_cgrp_subsys = {
                      ^~~~~~~~~~~~~~~
In file included from ./include/asm-generic/percpu.h:6,
                 from ./arch/x86/include/asm/percpu.h:553,
                 from ./arch/x86/include/asm/preempt.h:5,
                 from ./include/linux/preempt.h:59,
                 from ./include/linux/spinlock.h:50,
                 from ./include/linux/seqlock.h:35,
                 from ./include/linux/time.h:5,
                 from ./include/uapi/linux/timex.h:56,
                 from ./include/linux/timex.h:56,
                 from ./include/linux/sched.h:20,
                 from ./include/linux/kasan.h:4,
                 from kernel/sched/core.c:29:
kernel/sched/core.c:7597:32: warning: unused variable ‘select_idle_mask’ [-Wunused-variable]
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
                                ^~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7597:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, select_idle_mask);
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:7596:32: warning: unused variable ‘load_balance_mask’ [-Wunused-variable]
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
                                ^~~~~~~~~~~~~~~~~
./include/linux/percpu-defs.h:101:44: note: in definition of macro ‘DECLARE_PER_CPU_SECTION’
  extern __PCPU_ATTRS(sec) __typeof__(type) name
                                            ^~~~
kernel/sched/core.c:7596:1: note: in expansion of macro ‘DECLARE_PER_CPU’
 DECLARE_PER_CPU(cpumask_var_t, load_balance_mask);
 ^~~~~~~~~~~~~~~
  CC      arch/x86/mm/hugetlbpage.o
  CC [M]  arch/x86/kvm/mmu.o
At top level:
kernel/sched/core.c:8882:6: warning: ‘dump_cpu_task’ defined but not used [-Wunused-function]
 void dump_cpu_task(int cpu)
      ^~~~~~~~~~~~~
kernel/sched/core.c:8774:5: warning: ‘__cfs_schedulable’ defined but not used [-Wunused-function]
 int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)
     ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:8705:5: warning: ‘cpu_cfs_period_read_u64’ defined but not used [-Wunused-function]
 u64 cpu_cfs_period_read_u64(struct cgroup_subsys_state *css,
     ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8699:5: warning: ‘cpu_cfs_quota_write_s64’ defined but not used [-Wunused-function]
 int cpu_cfs_quota_write_s64(struct cgroup_subsys_state *css,
     ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:8428:5: warning: ‘sched_rr_handler’ defined but not used [-Wunused-function]
 int sched_rr_handler(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~
kernel/sched/core.c:8388:5: warning: ‘sched_rt_handler’ defined but not used [-Wunused-function]
 int sched_rt_handler(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~
kernel/sched/core.c:7999:6: warning: ‘sched_destroy_group’ defined but not used [-Wunused-function]
 void sched_destroy_group(struct task_group *tg)
      ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7855:6: warning: ‘normalize_rt_tasks’ defined but not used [-Wunused-function]
 void normalize_rt_tasks(void)
      ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7612:13: warning: ‘sched_init’ defined but not used [-Wunused-function]
 void __init sched_init(void)
             ^~~~~~~~~~
kernel/sched/core.c:7577:5: warning: ‘in_sched_functions’ defined but not used [-Wunused-function]
 int in_sched_functions(unsigned long addr)
     ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7528:13: warning: ‘sched_init_smp’ defined but not used [-Wunused-function]
 void __init sched_init_smp(void)
             ^~~~~~~~~~~~~~
kernel/sched/core.c:7489:5: warning: ‘sched_cpu_dying’ defined but not used [-Wunused-function]
 int sched_cpu_dying(unsigned int cpu)
     ^~~~~~~~~~~~~~~
kernel/sched/core.c:7481:5: warning: ‘sched_cpu_starting’ defined but not used [-Wunused-function]
 int sched_cpu_starting(unsigned int cpu)
     ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7441:5: warning: ‘sched_cpu_deactivate’ defined but not used [-Wunused-function]
 int sched_cpu_deactivate(unsigned int cpu)
     ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7408:5: warning: ‘sched_cpu_activate’ defined but not used [-Wunused-function]
 int sched_cpu_activate(unsigned int cpu)
     ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:7011:6: warning: ‘__sdt_free’ defined but not used [-Wunused-function]
 void __sdt_free(const struct cpumask *cpu_map)
      ^~~~~~~~~~
kernel/sched/core.c:6946:5: warning: ‘__sdt_alloc’ defined but not used [-Wunused-function]
 int __sdt_alloc(const struct cpumask *cpu_map)
     ^~~~~~~~~~~
kernel/sched/core.c:6673:6: warning: ‘set_sched_topology’ defined but not used [-Wunused-function]
 void set_sched_topology(struct sched_domain_topology_level *tl)
      ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5552:6: warning: ‘idle_task_exit’ defined but not used [-Wunused-function]
 void idle_task_exit(void)
      ^~~~~~~~~~~~~~
kernel/sched/core.c:5522:6: warning: ‘sched_setnuma’ defined but not used [-Wunused-function]
 void sched_setnuma(struct task_struct *p, int nid)
      ^~~~~~~~~~~~~
kernel/sched/core.c:5501:5: warning: ‘migrate_task_to’ defined but not used [-Wunused-function]
 int migrate_task_to(struct task_struct *p, int target_cpu)
     ^~~~~~~~~~~~~~~
kernel/sched/core.c:5441:5: warning: ‘task_can_attach’ defined but not used [-Wunused-function]
 int task_can_attach(struct task_struct *p,
     ^~~~~~~~~~~~~~~
kernel/sched/core.c:5417:5: warning: ‘cpuset_cpumask_can_shrink’ defined but not used [-Wunused-function]
 int cpuset_cpumask_can_shrink(const struct cpumask *cur,
     ^~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5345:6: warning: ‘init_idle_bootup_task’ defined but not used [-Wunused-function]
 void init_idle_bootup_task(struct task_struct *idle)
      ^~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:5307:6: warning: ‘show_state_filter’ defined but not used [-Wunused-function]
 void show_state_filter(unsigned long state_filter)
      ^~~~~~~~~~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_rr_get_interval’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5235:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_get_priority_min’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5206:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_get_priority_max’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:5179:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getaffinity’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4932:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setaffinity’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4880:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getattr’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:185:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4729:1: note: in expansion of macro ‘SYSCALL_DEFINE4’
 SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getparam’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4651:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_getscheduler’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4622:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setattr’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4588:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setparam’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:183:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4577:1: note: in expansion of macro ‘SYSCALL_DEFINE2’
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 ^~~~~~~~~~~~~~~
./include/linux/syscalls.h:199:18: warning: ‘SyS_sched_setscheduler’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:184:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:4560:1: note: in expansion of macro ‘SYSCALL_DEFINE3’
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:3937:21: warning: ‘idle_task’ defined but not used [-Wunused-function]
 struct task_struct *idle_task(int cpu)
                     ^~~~~~~~~
kernel/sched/core.c:3913:5: warning: ‘idle_cpu’ defined but not used [-Wunused-function]
 int idle_cpu(int cpu)
     ^~~~~~~~
kernel/sched/core.c:3902:5: warning: ‘task_prio’ defined but not used [-Wunused-function]
 int task_prio(const struct task_struct *p)
     ^~~~~~~~~
In file included from kernel/sched/core.c:61:
./include/linux/syscalls.h:199:18: warning: ‘SyS_nice’ defined but not used [-Wunused-function]
  asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                  ^~~
./include/linux/syscalls.h:191:2: note: in expansion of macro ‘__SYSCALL_DEFINEx’
  __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
  ^~~~~~~~~~~~~~~~~
./include/linux/syscalls.h:182:36: note: in expansion of macro ‘SYSCALL_DEFINEx’
 #define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
                                    ^~~~~~~~~~~~~~~
kernel/sched/core.c:3868:1: note: in expansion of macro ‘SYSCALL_DEFINE1’
 SYSCALL_DEFINE1(nice, int, increment)
 ^~~~~~~~~~~~~~~
kernel/sched/core.c:3700:6: warning: ‘rt_mutex_setprio’ defined but not used [-Wunused-function]
 void rt_mutex_setprio(struct task_struct *p, int prio)
      ^~~~~~~~~~~~~~~~
kernel/sched/core.c:3660:35: warning: ‘preempt_schedule_irq’ defined but not used [-Wunused-function]
 asmlinkage __visible void __sched preempt_schedule_irq(void)
                                   ^~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3544:14: warning: ‘schedule_preempt_disabled’ defined but not used [-Wunused-function]
 void __sched schedule_preempt_disabled(void)
              ^~~~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3468:17: warning: ‘do_task_dead’ defined but not used [-Wunused-function]
 void __noreturn do_task_dead(void)
                 ^~~~~~~~~~~~
kernel/sched/core.c:3121:6: warning: ‘scheduler_tick’ defined but not used [-Wunused-function]
 void scheduler_tick(void)
      ^~~~~~~~~~~~~~
kernel/sched/core.c:3078:20: warning: ‘task_sched_runtime’ defined but not used [-Wunused-function]
 unsigned long long task_sched_runtime(struct task_struct *p)
                    ^~~~~~~~~~~~~~~~~~
kernel/sched/core.c:3026:6: warning: ‘sched_exec’ defined but not used [-Wunused-function]
 void sched_exec(void)
      ^~~~~~~~~~
kernel/sched/core.c:3013:6: warning: ‘get_iowait_load’ defined but not used [-Wunused-function]
 void get_iowait_load(unsigned long *nr_waiters, unsigned long *load)
      ^~~~~~~~~~~~~~~
kernel/sched/core.c:3007:15: warning: ‘nr_iowait_cpu’ defined but not used [-Wunused-function]
 unsigned long nr_iowait_cpu(int cpu)
               ^~~~~~~~~~~~~
kernel/sched/core.c:2997:15: warning: ‘nr_iowait’ defined but not used [-Wunused-function]
 unsigned long nr_iowait(void)
               ^~~~~~~~~
kernel/sched/core.c:2986:20: warning: ‘nr_context_switches’ defined but not used [-Wunused-function]
 unsigned long long nr_context_switches(void)
                    ^~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2957:15: warning: ‘nr_running’ defined but not used [-Wunused-function]
 unsigned long nr_running(void)
               ^~~~~~~~~~
kernel/sched/core.c:2878:27: warning: ‘schedule_tail’ defined but not used [-Wunused-function]
 asmlinkage __visible void schedule_tail(struct task_struct *prev)
                           ^~~~~~~~~~~~~
kernel/sched/core.c:2598:6: warning: ‘wake_up_new_task’ defined but not used [-Wunused-function]
 void wake_up_new_task(struct task_struct *p)
      ^~~~~~~~~~~~~~~~
kernel/sched/core.c:2401:5: warning: ‘sched_fork’ defined but not used [-Wunused-function]
 int sched_fork(unsigned long clone_flags, struct task_struct *p)
     ^~~~~~~~~~
kernel/sched/core.c:2374:5: warning: ‘sysctl_schedstats’ defined but not used [-Wunused-function]
 int sysctl_schedstats(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~~
kernel/sched/core.c:2334:6: warning: ‘force_schedstat_enabled’ defined but not used [-Wunused-function]
 void force_schedstat_enabled(void)
      ^~~~~~~~~~~~~~~~~~~~~~~
kernel/sched/core.c:2299:5: warning: ‘sysctl_numa_balancing’ defined but not used [-Wunused-function]
 int sysctl_numa_balancing(struct ctl_table *table, int write,
     ^~~~~~~~~~~~~~~~~~~~~
cc1: some warnings being treated as errors
make[4]: *** [scripts/Makefile.build:293: kernel/sched/core.o] Error 1
make[3]: *** [scripts/Makefile.build:544: kernel/sched] Error 2
make[3]: *** Waiting for unfinished jobs....
  CC [M]  arch/x86/kvm/emulate.o
  LD      arch/x86/platform/uv/built-in.o
  CC [M]  arch/x86/kvm/i8259.o
arch/x86/mm/pat.o: warning: objtool: init_cache_modes.part.3()+0x36: function has unreachable instruction
  CC      arch/x86/mm/dump_pagetables.o
  CC      arch/x86/mm/kmmio.o
  CC      arch/x86/events/intel/p4.o
  CC      arch/x86/mm/pf_in.o
  CC      arch/x86/events/intel/p6.o
  LD      arch/x86/platform/sfi/built-in.o
  LD      arch/x86/platform/intel/built-in.o
  CC      arch/x86/mm/mmio-mod.o
  CC      kernel/power/user.o
  LD      arch/x86/platform/built-in.o
  CC      arch/x86/mm/numa.o
  CC      kernel/power/poweroff.o
  CC [M]  arch/x86/kvm/irq.o
  CC      arch/x86/events/intel/pt.o
kernel/power/swap.o: warning: objtool: swsusp_read()+0x1bf: function has unreachable instruction
  CC [M]  arch/x86/events/intel/rapl.o
  CC      arch/x86/purgatory/kexec-purgatory.o
  CC [M]  arch/x86/events/intel/uncore.o
  CC [M]  arch/x86/kvm/lapic.o
  CC      arch/x86/mm/numa_64.o
  LD      arch/x86/purgatory/built-in.o
  CC      arch/x86/mm/amdtopology.o
  CC      arch/x86/realmode/init.o
  LD      kernel/power/built-in.o
make[2]: *** [Makefile:992: kernel] Error 2
make[2]: *** Waiting for unfinished jobs....
  CC      arch/x86/kernel/x86_init.o
  AS      arch/x86/realmode/rm/header.o
  CC      arch/x86/kernel/i8259.o
  CC      arch/x86/mm/srat.o
  AS      arch/x86/realmode/rm/trampoline_64.o
  CC [M]  arch/x86/kvm/i8254.o
  CC [M]  arch/x86/events/intel/uncore_nhmex.o
  CC      arch/x86/mm/numa_emulation.o
  AS      arch/x86/realmode/rm/stack.o
  CC      arch/x86/mm/mpx.o
  AS      arch/x86/realmode/rm/reboot.o
  CC      arch/x86/mm/pkeys.o
  CC [M]  arch/x86/events/intel/uncore_snb.o
  AS      arch/x86/realmode/rm/wakeup_asm.o
  CC      arch/x86/realmode/rm/wakemain.o
  CC [M]  arch/x86/kvm/ioapic.o
  CC      arch/x86/kernel/irqinit.o
  CC      arch/x86/kernel/jump_label.o
  CC      arch/x86/mm/kaslr.o
  CC [M]  arch/x86/events/intel/uncore_snbep.o
  CC [M]  arch/x86/events/intel/cstate.o
  CC      arch/x86/realmode/rm/video-mode.o
  LD      arch/x86/mm/mmiotrace.o
  AS      arch/x86/realmode/rm/copy.o
  AS      arch/x86/realmode/rm/bioscall.o
  CC [M]  arch/x86/kvm/irq_comm.o
  CC      arch/x86/realmode/rm/regs.o
  CC [M]  arch/x86/kvm/cpuid.o
  CC      arch/x86/kernel/irq_work.o
  CC      arch/x86/kernel/probe_roms.o
  CC      arch/x86/realmode/rm/video-vga.o
  CC      arch/x86/realmode/rm/video-vesa.o
  CC      arch/x86/kernel/sys_x86_64.o
  AS      arch/x86/kernel/mcount_64.o
  LD      arch/x86/mm/built-in.o
  CC [M]  arch/x86/kvm/pmu.o
  CC      arch/x86/kernel/espfix_64.o
  CC      arch/x86/kernel/ksysfs.o
  CC      arch/x86/xen/enlighten.o
  CC      arch/x86/realmode/rm/video-bios.o
  CC      arch/x86/xen/setup.o
  CC      arch/x86/xen/multicalls.o
  CC      arch/x86/kernel/bootflag.o
  PASYMS  arch/x86/realmode/rm/pasyms.h
  CC      arch/x86/kernel/e820.o
  LDS     arch/x86/realmode/rm/realmode.lds
  CC      arch/x86/kernel/pci-dma.o
  CC [M]  arch/x86/kvm/mtrr.o
  LD      arch/x86/realmode/rm/realmode.elf
  CC      arch/x86/kernel/quirks.o
  RELOCS  arch/x86/realmode/rm/realmode.relocs
  OBJCOPY arch/x86/realmode/rm/realmode.bin
  LD      arch/x86/events/intel/built-in.o
  AS      arch/x86/realmode/rmpiggy.o
  LD [M]  arch/x86/events/intel/intel-rapl-perf.o
  LD [M]  arch/x86/events/intel/intel-uncore.o
  CC      arch/x86/kernel/topology.o
  LD [M]  arch/x86/events/intel/intel-cstate.o
  CC [M]  arch/x86/events/amd/power.o
  LD      arch/x86/realmode/built-in.o
  CC      arch/x86/kernel/kdebugfs.o
  CC [M]  arch/x86/kvm/hyperv.o
  CC      arch/x86/xen/mmu.o
  CC      arch/x86/xen/irq.o
  CC      arch/x86/kernel/alternative.o
  CC      arch/x86/kernel/i8253.o
  LD      arch/x86/events/built-in.o
  CC [M]  arch/x86/kvm/page_track.o
  CC [M]  arch/x86/kvm/debugfs.o
  CC      arch/x86/kernel/pci-nommu.o
  CC [M]  arch/x86/kvm/vmx.o
  CC      arch/x86/xen/time.o
  CC [M]  arch/x86/kvm/pmu_intel.o
  CC      arch/x86/kernel/hw_breakpoint.o
  CC [M]  arch/x86/kvm/svm.o
  CC      arch/x86/kernel/tsc.o
  CC      arch/x86/kernel/tsc_msr.o
  CC [M]  arch/x86/kvm/pmu_amd.o
  CC      arch/x86/kernel/io_delay.o
  CC      arch/x86/kernel/rtc.o
arch/x86/xen/enlighten.o: warning: objtool: xen_pin_vcpu()+0x63: function has unreachable instruction
  AS      arch/x86/xen/xen-asm.o
  CC      arch/x86/kernel/pci-iommu_table.o
  AS      arch/x86/xen/xen-asm_64.o
  CC      arch/x86/kernel/resource.o
  CC      arch/x86/xen/grant-table.o
  CC      arch/x86/kernel/process.o
  CC      arch/x86/kernel/acpi/boot.o
  CC      arch/x86/xen/suspend.o
  CC      arch/x86/kernel/apic/apic.o
  CC      arch/x86/kernel/apic/apic_noop.o
  CC      arch/x86/kernel/cpu/intel_cacheinfo.o
  CC      arch/x86/kernel/fpu/init.o
  CC      arch/x86/kernel/kprobes/core.o
  CC      arch/x86/kernel/fpu/bugs.o
arch/x86/kvm/x86.o: warning: objtool: emulator_get_cr()+0x22: function has unreachable instruction
  LD [M]  arch/x86/kvm/kvm.o
  CC      arch/x86/kernel/fpu/core.o
  CC      arch/x86/kernel/ptrace.o
  CC      arch/x86/kernel/apic/ipi.o
  CC      arch/x86/xen/platform-pci-unplug.o
  CC      arch/x86/kernel/fpu/regset.o
  CC      arch/x86/xen/p2m.o
  CC      arch/x86/kernel/cpu/scattered.o
  CC      arch/x86/xen/apic.o
  CC      arch/x86/kernel/acpi/sleep.o
  CC      arch/x86/kernel/fpu/signal.o
  CC      arch/x86/kernel/tls.o
  CC      arch/x86/kernel/kprobes/opt.o
  CC      arch/x86/kernel/apic/vector.o
  CC      arch/x86/kernel/cpu/topology.o
  LD [M]  arch/x86/kvm/kvm-amd.o
  CC      arch/x86/kernel/apic/hw_nmi.o
  CC      arch/x86/kernel/step.o
  CC      arch/x86/xen/pmu.o
  AS      arch/x86/kernel/acpi/wakeup_64.o
  CC      arch/x86/xen/trace.o
  CC      arch/x86/kernel/acpi/apei.o
  CC      arch/x86/kernel/apic/io_apic.o
  CC      arch/x86/kernel/i8237.o
  CC      arch/x86/kernel/fpu/xstate.o
  CC      arch/x86/kernel/kprobes/ftrace.o
  CC      arch/x86/kernel/cpu/common.o
  CC      arch/x86/kernel/apic/msi.o
  CC      arch/x86/kernel/acpi/cstate.o
  CC      arch/x86/kernel/apic/htirq.o
  CC      arch/x86/kernel/stacktrace.o
  CC      arch/x86/kernel/reboot.o
  CC      arch/x86/kernel/early-quirks.o
  CC      arch/x86/kernel/apic/x2apic_phys.o
  CC      arch/x86/xen/smp.o
  LD      arch/x86/kernel/kprobes/built-in.o
  CC      arch/x86/kernel/smp.o
  CC      arch/x86/xen/spinlock.o
  LD [M]  arch/x86/kvm/kvm-intel.o
  CC      arch/x86/xen/vga.o
  CC      arch/x86/kernel/smpboot.o
  CC      arch/x86/kernel/apic/x2apic_cluster.o
  CC      arch/x86/kernel/apic/apic_flat_64.o
  LD      arch/x86/kernel/fpu/built-in.o
  LD      arch/x86/kernel/acpi/built-in.o
  CC      arch/x86/kernel/tsc_sync.o
  CC      arch/x86/kernel/setup_percpu.o
  CC      arch/x86/xen/pci-swiotlb-xen.o
  CC      arch/x86/xen/efi.o
  CC      arch/x86/kernel/apic/probe_64.o
  CC      arch/x86/kernel/mpparse.o
  CC      arch/x86/kernel/ftrace.o
  CC      arch/x86/kernel/livepatch.o
  CC      arch/x86/kernel/cpu/rdrand.o
  CC      arch/x86/kernel/trace_clock.o
  CC      arch/x86/kernel/machine_kexec_64.o
  AS      arch/x86/kernel/relocate_kernel_64.o
  CC      arch/x86/kernel/crash.o
  CC      arch/x86/kernel/kexec-bzimage64.o
  CC      arch/x86/kernel/crash_dump_64.o
  CC      arch/x86/kernel/cpu/match.o
  CC      arch/x86/kernel/module.o
  CC      arch/x86/kernel/doublefault.o
  CC      arch/x86/kernel/early_printk.o
  LD      arch/x86/kernel/apic/built-in.o
  CC      arch/x86/kernel/hpet.o
  CC      arch/x86/kernel/amd_nb.o
  CC      arch/x86/kernel/kvm.o
  CC      arch/x86/kernel/cpu/proc.o
  LD      arch/x86/xen/built-in.o
  MKCAP   arch/x86/kernel/cpu/capflags.c
  CC      arch/x86/kernel/kvmclock.o
  CC      arch/x86/kernel/paravirt.o
arch/x86/kernel/machine_kexec_64.o: warning: objtool: arch_kexec_apply_relocations_add()+0x182: function has unreachable instruction
  CC      arch/x86/kernel/paravirt_patch_64.o
arch/x86/kernel/module.o: warning: objtool: apply_relocate_add()+0xae: function has unreachable instruction
  CC      arch/x86/kernel/paravirt-spinlocks.o
  CC      arch/x86/kernel/pvclock.o
  CC      arch/x86/kernel/cpu/powerflags.o
  CC      arch/x86/kernel/pmem.o
  CC      arch/x86/kernel/pcspeaker.o
  CC      arch/x86/kernel/cpu/bugs_64.o
  CC      arch/x86/kernel/pci-swiotlb.o
  CC      arch/x86/kernel/cpu/intel.o
  CC      arch/x86/kernel/sysfb.o
  CC      arch/x86/kernel/cpu/amd.o
  CC      arch/x86/kernel/cpu/centaur.o
  CC      arch/x86/kernel/sysfb_efi.o
  CC      arch/x86/kernel/perf_regs.o
  CC      arch/x86/kernel/tracepoint.o
  CC      arch/x86/kernel/unwind_guess.o
  CC      arch/x86/kernel/audit_64.o
  CC      arch/x86/kernel/amd_gart_64.o
  CC      arch/x86/kernel/aperture_64.o
  CC      arch/x86/kernel/pci-calgary_64.o
  CC      arch/x86/kernel/cpu/microcode/core.o
  CC      arch/x86/kernel/cpu/mcheck/mce.o
  CC      arch/x86/kernel/cpu/mtrr/main.o
  CC      arch/x86/kernel/cpu/microcode/intel.o
  CC      arch/x86/kernel/cpu/microcode/intel_lib.o
  CC      arch/x86/kernel/tce_64.o
  CC      arch/x86/kernel/mmconf-fam10h_64.o
  CC      arch/x86/kernel/cpu/mtrr/if.o
  CC      arch/x86/kernel/vsmp_64.o
  CC      arch/x86/kernel/cpu/microcode/amd.o
  AS      arch/x86/kernel/head_64.o
  CC      arch/x86/kernel/head64.o
  CC      arch/x86/kernel/cpu/perfctr-watchdog.o
  CC      arch/x86/kernel/ebda.o
  CC      arch/x86/kernel/platform-quirks.o
  LDS     arch/x86/kernel/vmlinux.lds
  CC [M]  arch/x86/kernel/msr.o
  CC [M]  arch/x86/kernel/cpuid.o
arch/x86/kernel/cpu/microcode/amd.c: In function ‘load_ucode_amd_bsp’:
arch/x86/kernel/cpu/microcode/amd.c:274:37: warning: ‘h.bin’ directive output may be truncated writing 5 bytes into a region of size between 1 and 7 [-Wformat-truncation=]
     "amd-ucode/microcode_amd_fam%.2xh.bin", family);
                                     ^~~~~
arch/x86/kernel/cpu/microcode/amd.c:273:3: note: ‘snprintf’ output between 35 and 41 bytes into a destination of size 36
   snprintf(fw_name, sizeof(fw_name),
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     "amd-ucode/microcode_amd_fam%.2xh.bin", family);
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  CC      arch/x86/kernel/cpu/vmware.o
  CC      arch/x86/kernel/cpu/hypervisor.o
  CC      arch/x86/kernel/cpu/mshyperv.o
  CC      arch/x86/kernel/cpu/mtrr/generic.o
  CC      arch/x86/kernel/cpu/mtrr/cleanup.o
  CC      arch/x86/kernel/cpu/mcheck/mce-severity.o
  CC      arch/x86/kernel/cpu/mcheck/mce-genpool.o
  CC      arch/x86/kernel/cpu/mcheck/mce_intel.o
  LD      arch/x86/kernel/cpu/microcode/microcode.o
  CC      arch/x86/kernel/cpu/mcheck/mce_amd.o
  LD      arch/x86/kernel/cpu/microcode/built-in.o
  CC      arch/x86/kernel/cpu/mcheck/threshold.o
  CC      arch/x86/kernel/cpu/mcheck/therm_throt.o
  CC      arch/x86/kernel/cpu/mcheck/mce-apei.o
  CC [M]  arch/x86/kernel/cpu/mcheck/mce-inject.o
  LD      arch/x86/kernel/cpu/mtrr/built-in.o
  LD      arch/x86/kernel/cpu/mcheck/built-in.o
  CC      arch/x86/kernel/cpu/capflags.o
  LD      arch/x86/kernel/cpu/built-in.o
  LD      arch/x86/kernel/built-in.o
  LD      arch/x86/built-in.o
make[1]: *** [scripts/package/Makefile:97: bindeb-pkg] Error 2
make: *** [Makefile:1333: bindeb-pkg] Error 2
